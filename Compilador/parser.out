Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ELEVATE
    ELSE
    FEND
    FLOAT
    PERCENT
    PROCEDURE
    QUOTE
    SLASH
    SPACE
    STR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> MAIN block END SEMICOLON blocklist
Rule 2     block -> variableDec statement statementList
Rule 3     blocklist -> MAIN SEMICOLON statementList END SEMICOLON
Rule 4     blocklist -> empty
Rule 5     statementList -> statementList1 statementList2
Rule 6     statementList -> empty
Rule 7     variableDec -> variableType ID NUMBER initiateVar SEMICOLON
Rule 8     variableDec -> empty
Rule 9     initiateVar -> ASSIGN value
Rule 10    initiateVar -> empty
Rule 11    arrayStruct -> SLPAREN NUMBER SRPAREN
Rule 12    arrayStruct -> empty
Rule 13    variableType -> INT
Rule 14    variableType -> TEXTO LPAREN NUMBER RPAREN
Rule 15    variableType -> empty
Rule 16    value -> NUMBER
Rule 17    value -> STRING
Rule 18    statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 19    statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
Rule 20    statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
Rule 21    statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
Rule 22    statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 23    statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 24    statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
Rule 25    statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
Rule 26    statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 27    statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
Rule 28    statement -> empty
Rule 29    statementList1 -> block statement
Rule 30    statementList2 -> block variableDec
Rule 31    randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 32    condition -> expression relation expression
Rule 33    relation -> ASSIGN
Rule 34    relation -> NE
Rule 35    relation -> LESS
Rule 36    relation -> GREATER
Rule 37    relation -> EQLESS
Rule 38    relation -> EQGREATER
Rule 39    relation -> EQUAL
Rule 40    expression -> term
Rule 41    expression -> addingOperator term
Rule 42    expression -> expression addingOperator term
Rule 43    addingOperator -> PLUS
Rule 44    addingOperator -> MINUS
Rule 45    term -> factor
Rule 46    term -> term multiplyingOperator factor
Rule 47    multiplyingOperator -> MULT
Rule 48    multiplyingOperator -> DIVIDE
Rule 49    factor -> ID
Rule 50    factor -> NUMBER
Rule 51    factor -> ID SLPAREN NUMBER SRPAREN
Rule 52    numberType -> NUMBER
Rule 53    numberType -> INT ID
Rule 54    arrayType -> ARRAY ID
Rule 55    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 54
ASIGNWORD            : 25
ASSIGN               : 9 33
BALLOON              : 18
COLON                : 18 20 20 22 23 25 25 26 27 27 31
COMMENT              : 
DEC                  : 23
DIVIDE               : 48
DO                   : 25
DOW                  : 19
ELEVATE              : 
ELSE                 : 
END                  : 1 3
ENDDO                : 19
ENDIF                : 21
EQGREATER            : 38
EQLESS               : 37
EQUAL                : 39
FEND                 : 
FLOAT                : 
FOR                  : 24
FORASIGNWORD         : 25
FOREND               : 24
GREATER              : 36
ID                   : 7 49 51 53 54
IF                   : 21
INC                  : 22
INT                  : 13 53
LESS                 : 35
LPAREN               : 14 18 19 20 21 22 23 25 25 26 27 31
MAIN                 : 1 3
MINUS                : 44
MULT                 : 47
NE                   : 34
NUMBER               : 7 11 14 16 50 51 52
OBJECT               : 27
PERCENT              : 
PLUS                 : 43
PROCEDURE            : 
QUOTE                : 
RANDOM               : 20 31
RPAREN               : 14 18 19 20 21 22 23 25 25 26 27 31
SEMICOLON            : 1 3 3 7 18 19 20 21 21 22 23 24 25 26 27 31
SLASH                : 
SLPAREN              : 11 51
SPACE                : 
SRPAREN              : 11 51
STR                  : 
STRING               : 17
TELAARANA            : 26
TEXTO                : 14
TIMES                : 24
USING                : 24
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addingOperator       : 41 42
arrayStruct          : 
arrayType            : 20 24 25
block                : 1 24 29 30
blocklist            : 1
condition            : 21
empty                : 4 6 8 10 12 15 28
expression           : 32 32 42
factor               : 45 46
initiateVar          : 7
multiplyingOperator  : 46
numberType           : 18 18 19 20 20 22 22 23 23 24 25 25 25 26 26 27 27 27 31 31
program              : 0
randomInFor          : 24
relation             : 32
statement            : 2 19 21 29
statementList        : 2 3
statementList1       : 5
statementList2       : 5
term                 : 40 41 42 46
value                : 9
variableDec          : 2 30
variableType         : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . MAIN block END SEMICOLON blocklist

    MAIN            shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> MAIN . block END SEMICOLON blocklist
    (2) block -> . variableDec statement statementList
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty
    (55) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    INT             shift and go to state 7
    TEXTO           shift and go to state 8
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    block                          shift and go to state 3
    variableDec                    shift and go to state 4
    variableType                   shift and go to state 5
    empty                          shift and go to state 6

state 3

    (1) program -> MAIN block . END SEMICOLON blocklist

    END             shift and go to state 9


state 4

    (2) block -> variableDec . statement statementList
    (18) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (20) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (21) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (22) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
    (25) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (26) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (28) statement -> . empty
    (55) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    BALLOON         shift and go to state 11
    DOW             shift and go to state 12
    RANDOM          shift and go to state 13
    IF              shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 16
    FOR             shift and go to state 17
    FORASIGNWORD    shift and go to state 18
    TELAARANA       shift and go to state 19
    OBJECT          shift and go to state 20
    INT             reduce using rule 55 (empty -> .)
    TEXTO           reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)

  ! BALLOON         [ reduce using rule 55 (empty -> .) ]
  ! DOW             [ reduce using rule 55 (empty -> .) ]
  ! RANDOM          [ reduce using rule 55 (empty -> .) ]
  ! IF              [ reduce using rule 55 (empty -> .) ]
  ! INC             [ reduce using rule 55 (empty -> .) ]
  ! DEC             [ reduce using rule 55 (empty -> .) ]
  ! FOR             [ reduce using rule 55 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 55 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 55 (empty -> .) ]
  ! OBJECT          [ reduce using rule 55 (empty -> .) ]

    statement                      shift and go to state 10
    empty                          shift and go to state 21

state 5

    (7) variableDec -> variableType . ID NUMBER initiateVar SEMICOLON

    ID              shift and go to state 22


state 6

    (8) variableDec -> empty .
    (15) variableType -> empty .

  ! reduce/reduce conflict for ID resolved using rule 8 (variableDec -> empty .)
    BALLOON         reduce using rule 8 (variableDec -> empty .)
    DOW             reduce using rule 8 (variableDec -> empty .)
    RANDOM          reduce using rule 8 (variableDec -> empty .)
    IF              reduce using rule 8 (variableDec -> empty .)
    INC             reduce using rule 8 (variableDec -> empty .)
    DEC             reduce using rule 8 (variableDec -> empty .)
    FOR             reduce using rule 8 (variableDec -> empty .)
    FORASIGNWORD    reduce using rule 8 (variableDec -> empty .)
    TELAARANA       reduce using rule 8 (variableDec -> empty .)
    OBJECT          reduce using rule 8 (variableDec -> empty .)
    INT             reduce using rule 8 (variableDec -> empty .)
    TEXTO           reduce using rule 8 (variableDec -> empty .)
    ID              reduce using rule 8 (variableDec -> empty .)
    END             reduce using rule 8 (variableDec -> empty .)
    FOREND          reduce using rule 8 (variableDec -> empty .)

  ! ID              [ reduce using rule 15 (variableType -> empty .) ]


state 7

    (13) variableType -> INT .

    ID              reduce using rule 13 (variableType -> INT .)


state 8

    (14) variableType -> TEXTO . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 23


state 9

    (1) program -> MAIN block END . SEMICOLON blocklist

    SEMICOLON       shift and go to state 24


state 10

    (2) block -> variableDec statement . statementList
    (5) statementList -> . statementList1 statementList2
    (6) statementList -> . empty
    (29) statementList1 -> . block statement
    (55) empty -> .
    (2) block -> . variableDec statement statementList
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)
    INT             shift and go to state 7
    TEXTO           shift and go to state 8

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    variableDec                    shift and go to state 4
    statementList                  shift and go to state 25
    statementList1                 shift and go to state 26
    empty                          shift and go to state 27
    block                          shift and go to state 28
    variableType                   shift and go to state 5

state 11

    (18) statement -> BALLOON . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 29


state 12

    (19) statement -> DOW . LPAREN numberType RPAREN statement ENDDO SEMICOLON

    LPAREN          shift and go to state 30


state 13

    (20) statement -> RANDOM . LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 31


state 14

    (21) statement -> IF . LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON

    LPAREN          shift and go to state 32


state 15

    (22) statement -> INC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 16

    (23) statement -> DEC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 34


state 17

    (24) statement -> FOR . numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 35

state 18

    (25) statement -> FORASIGNWORD . LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 38


state 19

    (26) statement -> TELAARANA . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 20

    (27) statement -> OBJECT . LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 40


state 21

    (28) statement -> empty .

    INT             reduce using rule 28 (statement -> empty .)
    TEXTO           reduce using rule 28 (statement -> empty .)
    ID              reduce using rule 28 (statement -> empty .)
    BALLOON         reduce using rule 28 (statement -> empty .)
    DOW             reduce using rule 28 (statement -> empty .)
    RANDOM          reduce using rule 28 (statement -> empty .)
    IF              reduce using rule 28 (statement -> empty .)
    INC             reduce using rule 28 (statement -> empty .)
    DEC             reduce using rule 28 (statement -> empty .)
    FOR             reduce using rule 28 (statement -> empty .)
    FORASIGNWORD    reduce using rule 28 (statement -> empty .)
    TELAARANA       reduce using rule 28 (statement -> empty .)
    OBJECT          reduce using rule 28 (statement -> empty .)
    END             reduce using rule 28 (statement -> empty .)
    FOREND          reduce using rule 28 (statement -> empty .)
    ENDDO           reduce using rule 28 (statement -> empty .)
    ENDIF           reduce using rule 28 (statement -> empty .)


state 22

    (7) variableDec -> variableType ID . NUMBER initiateVar SEMICOLON

    NUMBER          shift and go to state 41


state 23

    (14) variableType -> TEXTO LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 42


state 24

    (1) program -> MAIN block END SEMICOLON . blocklist
    (3) blocklist -> . MAIN SEMICOLON statementList END SEMICOLON
    (4) blocklist -> . empty
    (55) empty -> .

    MAIN            shift and go to state 43
    $end            reduce using rule 55 (empty -> .)

    blocklist                      shift and go to state 44
    empty                          shift and go to state 45

state 25

    (2) block -> variableDec statement statementList .

    END             reduce using rule 2 (block -> variableDec statement statementList .)
    BALLOON         reduce using rule 2 (block -> variableDec statement statementList .)
    DOW             reduce using rule 2 (block -> variableDec statement statementList .)
    RANDOM          reduce using rule 2 (block -> variableDec statement statementList .)
    IF              reduce using rule 2 (block -> variableDec statement statementList .)
    INC             reduce using rule 2 (block -> variableDec statement statementList .)
    DEC             reduce using rule 2 (block -> variableDec statement statementList .)
    FOR             reduce using rule 2 (block -> variableDec statement statementList .)
    FORASIGNWORD    reduce using rule 2 (block -> variableDec statement statementList .)
    TELAARANA       reduce using rule 2 (block -> variableDec statement statementList .)
    OBJECT          reduce using rule 2 (block -> variableDec statement statementList .)
    INT             reduce using rule 2 (block -> variableDec statement statementList .)
    TEXTO           reduce using rule 2 (block -> variableDec statement statementList .)
    ID              reduce using rule 2 (block -> variableDec statement statementList .)
    FOREND          reduce using rule 2 (block -> variableDec statement statementList .)


state 26

    (5) statementList -> statementList1 . statementList2
    (30) statementList2 -> . block variableDec
    (2) block -> . variableDec statement statementList
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty
    (55) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    INT             shift and go to state 7
    TEXTO           shift and go to state 8
    ID              reduce using rule 55 (empty -> .)
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    statementList2                 shift and go to state 46
    block                          shift and go to state 47
    variableDec                    shift and go to state 4
    variableType                   shift and go to state 5
    empty                          shift and go to state 6

state 27

    (6) statementList -> empty .
    (8) variableDec -> empty .
    (15) variableType -> empty .

  ! reduce/reduce conflict for INT resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for TEXTO resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for BALLOON resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for DOW resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for RANDOM resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for INC resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for DEC resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for FORASIGNWORD resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for TELAARANA resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for OBJECT resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for END resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for FOREND resolved using rule 6 (statementList -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 6 (statementList -> empty .)
    BALLOON         reduce using rule 6 (statementList -> empty .)
    DOW             reduce using rule 6 (statementList -> empty .)
    RANDOM          reduce using rule 6 (statementList -> empty .)
    IF              reduce using rule 6 (statementList -> empty .)
    INC             reduce using rule 6 (statementList -> empty .)
    DEC             reduce using rule 6 (statementList -> empty .)
    FOR             reduce using rule 6 (statementList -> empty .)
    FORASIGNWORD    reduce using rule 6 (statementList -> empty .)
    TELAARANA       reduce using rule 6 (statementList -> empty .)
    OBJECT          reduce using rule 6 (statementList -> empty .)
    INT             reduce using rule 6 (statementList -> empty .)
    TEXTO           reduce using rule 6 (statementList -> empty .)
    ID              reduce using rule 6 (statementList -> empty .)
    END             reduce using rule 6 (statementList -> empty .)
    FOREND          reduce using rule 6 (statementList -> empty .)

  ! INT             [ reduce using rule 8 (variableDec -> empty .) ]
  ! TEXTO           [ reduce using rule 8 (variableDec -> empty .) ]
  ! ID              [ reduce using rule 8 (variableDec -> empty .) ]
  ! BALLOON         [ reduce using rule 8 (variableDec -> empty .) ]
  ! DOW             [ reduce using rule 8 (variableDec -> empty .) ]
  ! RANDOM          [ reduce using rule 8 (variableDec -> empty .) ]
  ! IF              [ reduce using rule 8 (variableDec -> empty .) ]
  ! INC             [ reduce using rule 8 (variableDec -> empty .) ]
  ! DEC             [ reduce using rule 8 (variableDec -> empty .) ]
  ! FOR             [ reduce using rule 8 (variableDec -> empty .) ]
  ! FORASIGNWORD    [ reduce using rule 8 (variableDec -> empty .) ]
  ! TELAARANA       [ reduce using rule 8 (variableDec -> empty .) ]
  ! OBJECT          [ reduce using rule 8 (variableDec -> empty .) ]
  ! END             [ reduce using rule 8 (variableDec -> empty .) ]
  ! FOREND          [ reduce using rule 8 (variableDec -> empty .) ]
  ! ID              [ reduce using rule 15 (variableType -> empty .) ]


state 28

    (29) statementList1 -> block . statement
    (18) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (20) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (21) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (22) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
    (25) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (26) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (28) statement -> . empty
    (55) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    BALLOON         shift and go to state 11
    DOW             shift and go to state 12
    RANDOM          shift and go to state 13
    IF              shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 16
    FOR             shift and go to state 17
    FORASIGNWORD    shift and go to state 18
    TELAARANA       shift and go to state 19
    OBJECT          shift and go to state 20
    INT             reduce using rule 55 (empty -> .)
    TEXTO           reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)

  ! BALLOON         [ reduce using rule 55 (empty -> .) ]
  ! DOW             [ reduce using rule 55 (empty -> .) ]
  ! RANDOM          [ reduce using rule 55 (empty -> .) ]
  ! IF              [ reduce using rule 55 (empty -> .) ]
  ! INC             [ reduce using rule 55 (empty -> .) ]
  ! DEC             [ reduce using rule 55 (empty -> .) ]
  ! FOR             [ reduce using rule 55 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 55 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 55 (empty -> .) ]
  ! OBJECT          [ reduce using rule 55 (empty -> .) ]

    statement                      shift and go to state 48
    empty                          shift and go to state 21

state 29

    (18) statement -> BALLOON LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 49

state 30

    (19) statement -> DOW LPAREN . numberType RPAREN statement ENDDO SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 50

state 31

    (20) statement -> RANDOM LPAREN . arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (54) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 52

    arrayType                      shift and go to state 51

state 32

    (21) statement -> IF LPAREN . condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (32) condition -> . expression relation expression
    (40) expression -> . term
    (41) expression -> . addingOperator term
    (42) expression -> . expression addingOperator term
    (45) term -> . factor
    (46) term -> . term multiplyingOperator factor
    (43) addingOperator -> . PLUS
    (44) addingOperator -> . MINUS
    (49) factor -> . ID
    (50) factor -> . NUMBER
    (51) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    condition                      shift and go to state 53
    expression                     shift and go to state 54
    term                           shift and go to state 55
    addingOperator                 shift and go to state 56
    factor                         shift and go to state 57

state 33

    (22) statement -> INC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 62

state 34

    (23) statement -> DEC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 63

state 35

    (24) statement -> FOR numberType . TIMES USING arrayType randomInFor block FOREND SEMICOLON

    TIMES           shift and go to state 64


state 36

    (52) numberType -> NUMBER .

    TIMES           reduce using rule 52 (numberType -> NUMBER .)
    COLON           reduce using rule 52 (numberType -> NUMBER .)
    RPAREN          reduce using rule 52 (numberType -> NUMBER .)


state 37

    (53) numberType -> INT . ID

    ID              shift and go to state 65


state 38

    (25) statement -> FORASIGNWORD LPAREN . numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 66

state 39

    (26) statement -> TELAARANA LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 67

state 40

    (27) statement -> OBJECT LPAREN . numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 68

state 41

    (7) variableDec -> variableType ID NUMBER . initiateVar SEMICOLON
    (9) initiateVar -> . ASSIGN value
    (10) initiateVar -> . empty
    (55) empty -> .

    ASSIGN          shift and go to state 70
    SEMICOLON       reduce using rule 55 (empty -> .)

    initiateVar                    shift and go to state 69
    empty                          shift and go to state 71

state 42

    (14) variableType -> TEXTO LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 72


state 43

    (3) blocklist -> MAIN . SEMICOLON statementList END SEMICOLON

    SEMICOLON       shift and go to state 73


state 44

    (1) program -> MAIN block END SEMICOLON blocklist .

    $end            reduce using rule 1 (program -> MAIN block END SEMICOLON blocklist .)


state 45

    (4) blocklist -> empty .

    $end            reduce using rule 4 (blocklist -> empty .)


state 46

    (5) statementList -> statementList1 statementList2 .

    BALLOON         reduce using rule 5 (statementList -> statementList1 statementList2 .)
    DOW             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    RANDOM          reduce using rule 5 (statementList -> statementList1 statementList2 .)
    IF              reduce using rule 5 (statementList -> statementList1 statementList2 .)
    INC             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    DEC             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    FOR             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    FORASIGNWORD    reduce using rule 5 (statementList -> statementList1 statementList2 .)
    TELAARANA       reduce using rule 5 (statementList -> statementList1 statementList2 .)
    OBJECT          reduce using rule 5 (statementList -> statementList1 statementList2 .)
    INT             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    TEXTO           reduce using rule 5 (statementList -> statementList1 statementList2 .)
    ID              reduce using rule 5 (statementList -> statementList1 statementList2 .)
    END             reduce using rule 5 (statementList -> statementList1 statementList2 .)
    FOREND          reduce using rule 5 (statementList -> statementList1 statementList2 .)


state 47

    (30) statementList2 -> block . variableDec
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty
    (55) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    INT             shift and go to state 7
    TEXTO           shift and go to state 8
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    END             reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    variableDec                    shift and go to state 74
    variableType                   shift and go to state 5
    empty                          shift and go to state 6

state 48

    (29) statementList1 -> block statement .

    BALLOON         reduce using rule 29 (statementList1 -> block statement .)
    DOW             reduce using rule 29 (statementList1 -> block statement .)
    RANDOM          reduce using rule 29 (statementList1 -> block statement .)
    IF              reduce using rule 29 (statementList1 -> block statement .)
    INC             reduce using rule 29 (statementList1 -> block statement .)
    DEC             reduce using rule 29 (statementList1 -> block statement .)
    FOR             reduce using rule 29 (statementList1 -> block statement .)
    FORASIGNWORD    reduce using rule 29 (statementList1 -> block statement .)
    TELAARANA       reduce using rule 29 (statementList1 -> block statement .)
    OBJECT          reduce using rule 29 (statementList1 -> block statement .)
    INT             reduce using rule 29 (statementList1 -> block statement .)
    TEXTO           reduce using rule 29 (statementList1 -> block statement .)
    ID              reduce using rule 29 (statementList1 -> block statement .)
    END             reduce using rule 29 (statementList1 -> block statement .)
    FOREND          reduce using rule 29 (statementList1 -> block statement .)


state 49

    (18) statement -> BALLOON LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 75


state 50

    (19) statement -> DOW LPAREN numberType . RPAREN statement ENDDO SEMICOLON

    RPAREN          shift and go to state 76


state 51

    (20) statement -> RANDOM LPAREN arrayType . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 77


state 52

    (54) arrayType -> ARRAY . ID

    ID              shift and go to state 78


state 53

    (21) statement -> IF LPAREN condition . RPAREN SEMICOLON statement ENDIF SEMICOLON

    RPAREN          shift and go to state 79


state 54

    (32) condition -> expression . relation expression
    (42) expression -> expression . addingOperator term
    (33) relation -> . ASSIGN
    (34) relation -> . NE
    (35) relation -> . LESS
    (36) relation -> . GREATER
    (37) relation -> . EQLESS
    (38) relation -> . EQGREATER
    (39) relation -> . EQUAL
    (43) addingOperator -> . PLUS
    (44) addingOperator -> . MINUS

    ASSIGN          shift and go to state 82
    NE              shift and go to state 83
    LESS            shift and go to state 84
    GREATER         shift and go to state 85
    EQLESS          shift and go to state 86
    EQGREATER       shift and go to state 87
    EQUAL           shift and go to state 88
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59

    relation                       shift and go to state 80
    addingOperator                 shift and go to state 81

state 55

    (40) expression -> term .
    (46) term -> term . multiplyingOperator factor
    (47) multiplyingOperator -> . MULT
    (48) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 40 (expression -> term .)
    NE              reduce using rule 40 (expression -> term .)
    LESS            reduce using rule 40 (expression -> term .)
    GREATER         reduce using rule 40 (expression -> term .)
    EQLESS          reduce using rule 40 (expression -> term .)
    EQGREATER       reduce using rule 40 (expression -> term .)
    EQUAL           reduce using rule 40 (expression -> term .)
    PLUS            reduce using rule 40 (expression -> term .)
    MINUS           reduce using rule 40 (expression -> term .)
    RPAREN          reduce using rule 40 (expression -> term .)
    MULT            shift and go to state 90
    DIVIDE          shift and go to state 91

    multiplyingOperator            shift and go to state 89

state 56

    (41) expression -> addingOperator . term
    (45) term -> . factor
    (46) term -> . term multiplyingOperator factor
    (49) factor -> . ID
    (50) factor -> . NUMBER
    (51) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    term                           shift and go to state 92
    factor                         shift and go to state 57

state 57

    (45) term -> factor .

    MULT            reduce using rule 45 (term -> factor .)
    DIVIDE          reduce using rule 45 (term -> factor .)
    ASSIGN          reduce using rule 45 (term -> factor .)
    NE              reduce using rule 45 (term -> factor .)
    LESS            reduce using rule 45 (term -> factor .)
    GREATER         reduce using rule 45 (term -> factor .)
    EQLESS          reduce using rule 45 (term -> factor .)
    EQGREATER       reduce using rule 45 (term -> factor .)
    EQUAL           reduce using rule 45 (term -> factor .)
    PLUS            reduce using rule 45 (term -> factor .)
    MINUS           reduce using rule 45 (term -> factor .)
    RPAREN          reduce using rule 45 (term -> factor .)


state 58

    (43) addingOperator -> PLUS .

    ID              reduce using rule 43 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 43 (addingOperator -> PLUS .)


state 59

    (44) addingOperator -> MINUS .

    ID              reduce using rule 44 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 44 (addingOperator -> MINUS .)


state 60

    (49) factor -> ID .
    (51) factor -> ID . SLPAREN NUMBER SRPAREN

    MULT            reduce using rule 49 (factor -> ID .)
    DIVIDE          reduce using rule 49 (factor -> ID .)
    ASSIGN          reduce using rule 49 (factor -> ID .)
    NE              reduce using rule 49 (factor -> ID .)
    LESS            reduce using rule 49 (factor -> ID .)
    GREATER         reduce using rule 49 (factor -> ID .)
    EQLESS          reduce using rule 49 (factor -> ID .)
    EQGREATER       reduce using rule 49 (factor -> ID .)
    EQUAL           reduce using rule 49 (factor -> ID .)
    PLUS            reduce using rule 49 (factor -> ID .)
    MINUS           reduce using rule 49 (factor -> ID .)
    RPAREN          reduce using rule 49 (factor -> ID .)
    SLPAREN         shift and go to state 93


state 61

    (50) factor -> NUMBER .

    MULT            reduce using rule 50 (factor -> NUMBER .)
    DIVIDE          reduce using rule 50 (factor -> NUMBER .)
    ASSIGN          reduce using rule 50 (factor -> NUMBER .)
    NE              reduce using rule 50 (factor -> NUMBER .)
    LESS            reduce using rule 50 (factor -> NUMBER .)
    GREATER         reduce using rule 50 (factor -> NUMBER .)
    EQLESS          reduce using rule 50 (factor -> NUMBER .)
    EQGREATER       reduce using rule 50 (factor -> NUMBER .)
    EQUAL           reduce using rule 50 (factor -> NUMBER .)
    PLUS            reduce using rule 50 (factor -> NUMBER .)
    MINUS           reduce using rule 50 (factor -> NUMBER .)
    RPAREN          reduce using rule 50 (factor -> NUMBER .)


state 62

    (22) statement -> INC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 94


state 63

    (23) statement -> DEC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 95


state 64

    (24) statement -> FOR numberType TIMES . USING arrayType randomInFor block FOREND SEMICOLON

    USING           shift and go to state 96


state 65

    (53) numberType -> INT ID .

    TIMES           reduce using rule 53 (numberType -> INT ID .)
    COLON           reduce using rule 53 (numberType -> INT ID .)
    RPAREN          reduce using rule 53 (numberType -> INT ID .)


state 66

    (25) statement -> FORASIGNWORD LPAREN numberType . COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 97


state 67

    (26) statement -> TELAARANA LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 98


state 68

    (27) statement -> OBJECT LPAREN numberType . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 99


state 69

    (7) variableDec -> variableType ID NUMBER initiateVar . SEMICOLON

    SEMICOLON       shift and go to state 100


state 70

    (9) initiateVar -> ASSIGN . value
    (16) value -> . NUMBER
    (17) value -> . STRING

    NUMBER          shift and go to state 102
    STRING          shift and go to state 103

    value                          shift and go to state 101

state 71

    (10) initiateVar -> empty .

    SEMICOLON       reduce using rule 10 (initiateVar -> empty .)


state 72

    (14) variableType -> TEXTO LPAREN NUMBER RPAREN .

    ID              reduce using rule 14 (variableType -> TEXTO LPAREN NUMBER RPAREN .)


state 73

    (3) blocklist -> MAIN SEMICOLON . statementList END SEMICOLON
    (5) statementList -> . statementList1 statementList2
    (6) statementList -> . empty
    (29) statementList1 -> . block statement
    (55) empty -> .
    (2) block -> . variableDec statement statementList
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    END             reduce using rule 55 (empty -> .)
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    INT             shift and go to state 7
    TEXTO           shift and go to state 8

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    statementList                  shift and go to state 104
    statementList1                 shift and go to state 26
    empty                          shift and go to state 27
    block                          shift and go to state 28
    variableDec                    shift and go to state 4
    variableType                   shift and go to state 5

state 74

    (30) statementList2 -> block variableDec .

    BALLOON         reduce using rule 30 (statementList2 -> block variableDec .)
    DOW             reduce using rule 30 (statementList2 -> block variableDec .)
    RANDOM          reduce using rule 30 (statementList2 -> block variableDec .)
    IF              reduce using rule 30 (statementList2 -> block variableDec .)
    INC             reduce using rule 30 (statementList2 -> block variableDec .)
    DEC             reduce using rule 30 (statementList2 -> block variableDec .)
    FOR             reduce using rule 30 (statementList2 -> block variableDec .)
    FORASIGNWORD    reduce using rule 30 (statementList2 -> block variableDec .)
    TELAARANA       reduce using rule 30 (statementList2 -> block variableDec .)
    OBJECT          reduce using rule 30 (statementList2 -> block variableDec .)
    INT             reduce using rule 30 (statementList2 -> block variableDec .)
    TEXTO           reduce using rule 30 (statementList2 -> block variableDec .)
    ID              reduce using rule 30 (statementList2 -> block variableDec .)
    END             reduce using rule 30 (statementList2 -> block variableDec .)
    FOREND          reduce using rule 30 (statementList2 -> block variableDec .)


state 75

    (18) statement -> BALLOON LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 105

state 76

    (19) statement -> DOW LPAREN numberType RPAREN . statement ENDDO SEMICOLON
    (18) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (20) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (21) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (22) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
    (25) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (26) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (28) statement -> . empty
    (55) empty -> .

    BALLOON         shift and go to state 11
    DOW             shift and go to state 12
    RANDOM          shift and go to state 13
    IF              shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 16
    FOR             shift and go to state 17
    FORASIGNWORD    shift and go to state 18
    TELAARANA       shift and go to state 19
    OBJECT          shift and go to state 20
    ENDDO           reduce using rule 55 (empty -> .)

    statement                      shift and go to state 106
    empty                          shift and go to state 21

state 77

    (20) statement -> RANDOM LPAREN arrayType COLON . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 107

state 78

    (54) arrayType -> ARRAY ID .

    COLON           reduce using rule 54 (arrayType -> ARRAY ID .)
    RANDOM          reduce using rule 54 (arrayType -> ARRAY ID .)
    RPAREN          reduce using rule 54 (arrayType -> ARRAY ID .)


state 79

    (21) statement -> IF LPAREN condition RPAREN . SEMICOLON statement ENDIF SEMICOLON

    SEMICOLON       shift and go to state 108


state 80

    (32) condition -> expression relation . expression
    (40) expression -> . term
    (41) expression -> . addingOperator term
    (42) expression -> . expression addingOperator term
    (45) term -> . factor
    (46) term -> . term multiplyingOperator factor
    (43) addingOperator -> . PLUS
    (44) addingOperator -> . MINUS
    (49) factor -> . ID
    (50) factor -> . NUMBER
    (51) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    expression                     shift and go to state 109
    term                           shift and go to state 55
    addingOperator                 shift and go to state 56
    factor                         shift and go to state 57

state 81

    (42) expression -> expression addingOperator . term
    (45) term -> . factor
    (46) term -> . term multiplyingOperator factor
    (49) factor -> . ID
    (50) factor -> . NUMBER
    (51) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    term                           shift and go to state 110
    factor                         shift and go to state 57

state 82

    (33) relation -> ASSIGN .

    PLUS            reduce using rule 33 (relation -> ASSIGN .)
    MINUS           reduce using rule 33 (relation -> ASSIGN .)
    ID              reduce using rule 33 (relation -> ASSIGN .)
    NUMBER          reduce using rule 33 (relation -> ASSIGN .)


state 83

    (34) relation -> NE .

    PLUS            reduce using rule 34 (relation -> NE .)
    MINUS           reduce using rule 34 (relation -> NE .)
    ID              reduce using rule 34 (relation -> NE .)
    NUMBER          reduce using rule 34 (relation -> NE .)


state 84

    (35) relation -> LESS .

    PLUS            reduce using rule 35 (relation -> LESS .)
    MINUS           reduce using rule 35 (relation -> LESS .)
    ID              reduce using rule 35 (relation -> LESS .)
    NUMBER          reduce using rule 35 (relation -> LESS .)


state 85

    (36) relation -> GREATER .

    PLUS            reduce using rule 36 (relation -> GREATER .)
    MINUS           reduce using rule 36 (relation -> GREATER .)
    ID              reduce using rule 36 (relation -> GREATER .)
    NUMBER          reduce using rule 36 (relation -> GREATER .)


state 86

    (37) relation -> EQLESS .

    PLUS            reduce using rule 37 (relation -> EQLESS .)
    MINUS           reduce using rule 37 (relation -> EQLESS .)
    ID              reduce using rule 37 (relation -> EQLESS .)
    NUMBER          reduce using rule 37 (relation -> EQLESS .)


state 87

    (38) relation -> EQGREATER .

    PLUS            reduce using rule 38 (relation -> EQGREATER .)
    MINUS           reduce using rule 38 (relation -> EQGREATER .)
    ID              reduce using rule 38 (relation -> EQGREATER .)
    NUMBER          reduce using rule 38 (relation -> EQGREATER .)


state 88

    (39) relation -> EQUAL .

    PLUS            reduce using rule 39 (relation -> EQUAL .)
    MINUS           reduce using rule 39 (relation -> EQUAL .)
    ID              reduce using rule 39 (relation -> EQUAL .)
    NUMBER          reduce using rule 39 (relation -> EQUAL .)


state 89

    (46) term -> term multiplyingOperator . factor
    (49) factor -> . ID
    (50) factor -> . NUMBER
    (51) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    factor                         shift and go to state 111

state 90

    (47) multiplyingOperator -> MULT .

    ID              reduce using rule 47 (multiplyingOperator -> MULT .)
    NUMBER          reduce using rule 47 (multiplyingOperator -> MULT .)


state 91

    (48) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 48 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 48 (multiplyingOperator -> DIVIDE .)


state 92

    (41) expression -> addingOperator term .
    (46) term -> term . multiplyingOperator factor
    (47) multiplyingOperator -> . MULT
    (48) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 41 (expression -> addingOperator term .)
    NE              reduce using rule 41 (expression -> addingOperator term .)
    LESS            reduce using rule 41 (expression -> addingOperator term .)
    GREATER         reduce using rule 41 (expression -> addingOperator term .)
    EQLESS          reduce using rule 41 (expression -> addingOperator term .)
    EQGREATER       reduce using rule 41 (expression -> addingOperator term .)
    EQUAL           reduce using rule 41 (expression -> addingOperator term .)
    PLUS            reduce using rule 41 (expression -> addingOperator term .)
    MINUS           reduce using rule 41 (expression -> addingOperator term .)
    RPAREN          reduce using rule 41 (expression -> addingOperator term .)
    MULT            shift and go to state 90
    DIVIDE          shift and go to state 91

    multiplyingOperator            shift and go to state 89

state 93

    (51) factor -> ID SLPAREN . NUMBER SRPAREN

    NUMBER          shift and go to state 112


state 94

    (22) statement -> INC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 113

state 95

    (23) statement -> DEC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 114

state 96

    (24) statement -> FOR numberType TIMES USING . arrayType randomInFor block FOREND SEMICOLON
    (54) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 52

    arrayType                      shift and go to state 115

state 97

    (25) statement -> FORASIGNWORD LPAREN numberType COLON . numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 116

state 98

    (26) statement -> TELAARANA LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 117

state 99

    (27) statement -> OBJECT LPAREN numberType COLON . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 118

state 100

    (7) variableDec -> variableType ID NUMBER initiateVar SEMICOLON .

    BALLOON         reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    DOW             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    RANDOM          reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    IF              reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    INC             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    DEC             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    FOR             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    FORASIGNWORD    reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    TELAARANA       reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    OBJECT          reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    INT             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    TEXTO           reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    ID              reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    END             reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)
    FOREND          reduce using rule 7 (variableDec -> variableType ID NUMBER initiateVar SEMICOLON .)


state 101

    (9) initiateVar -> ASSIGN value .

    SEMICOLON       reduce using rule 9 (initiateVar -> ASSIGN value .)


state 102

    (16) value -> NUMBER .

    SEMICOLON       reduce using rule 16 (value -> NUMBER .)


state 103

    (17) value -> STRING .

    SEMICOLON       reduce using rule 17 (value -> STRING .)


state 104

    (3) blocklist -> MAIN SEMICOLON statementList . END SEMICOLON

    END             shift and go to state 119


state 105

    (18) statement -> BALLOON LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 120


state 106

    (19) statement -> DOW LPAREN numberType RPAREN statement . ENDDO SEMICOLON

    ENDDO           shift and go to state 121


state 107

    (20) statement -> RANDOM LPAREN arrayType COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 122


state 108

    (21) statement -> IF LPAREN condition RPAREN SEMICOLON . statement ENDIF SEMICOLON
    (18) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (20) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (21) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (22) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON
    (25) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON
    (26) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (28) statement -> . empty
    (55) empty -> .

    BALLOON         shift and go to state 11
    DOW             shift and go to state 12
    RANDOM          shift and go to state 13
    IF              shift and go to state 14
    INC             shift and go to state 15
    DEC             shift and go to state 16
    FOR             shift and go to state 17
    FORASIGNWORD    shift and go to state 18
    TELAARANA       shift and go to state 19
    OBJECT          shift and go to state 20
    ENDIF           reduce using rule 55 (empty -> .)

    statement                      shift and go to state 123
    empty                          shift and go to state 21

state 109

    (32) condition -> expression relation expression .
    (42) expression -> expression . addingOperator term
    (43) addingOperator -> . PLUS
    (44) addingOperator -> . MINUS

    RPAREN          reduce using rule 32 (condition -> expression relation expression .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59

    addingOperator                 shift and go to state 81

state 110

    (42) expression -> expression addingOperator term .
    (46) term -> term . multiplyingOperator factor
    (47) multiplyingOperator -> . MULT
    (48) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 42 (expression -> expression addingOperator term .)
    NE              reduce using rule 42 (expression -> expression addingOperator term .)
    LESS            reduce using rule 42 (expression -> expression addingOperator term .)
    GREATER         reduce using rule 42 (expression -> expression addingOperator term .)
    EQLESS          reduce using rule 42 (expression -> expression addingOperator term .)
    EQGREATER       reduce using rule 42 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 42 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 42 (expression -> expression addingOperator term .)
    MINUS           reduce using rule 42 (expression -> expression addingOperator term .)
    RPAREN          reduce using rule 42 (expression -> expression addingOperator term .)
    MULT            shift and go to state 90
    DIVIDE          shift and go to state 91

    multiplyingOperator            shift and go to state 89

state 111

    (46) term -> term multiplyingOperator factor .

    MULT            reduce using rule 46 (term -> term multiplyingOperator factor .)
    DIVIDE          reduce using rule 46 (term -> term multiplyingOperator factor .)
    ASSIGN          reduce using rule 46 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 46 (term -> term multiplyingOperator factor .)
    LESS            reduce using rule 46 (term -> term multiplyingOperator factor .)
    GREATER         reduce using rule 46 (term -> term multiplyingOperator factor .)
    EQLESS          reduce using rule 46 (term -> term multiplyingOperator factor .)
    EQGREATER       reduce using rule 46 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 46 (term -> term multiplyingOperator factor .)
    PLUS            reduce using rule 46 (term -> term multiplyingOperator factor .)
    MINUS           reduce using rule 46 (term -> term multiplyingOperator factor .)
    RPAREN          reduce using rule 46 (term -> term multiplyingOperator factor .)


state 112

    (51) factor -> ID SLPAREN NUMBER . SRPAREN

    SRPAREN         shift and go to state 124


state 113

    (22) statement -> INC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 125


state 114

    (23) statement -> DEC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 126


state 115

    (24) statement -> FOR numberType TIMES USING arrayType . randomInFor block FOREND SEMICOLON
    (31) randomInFor -> . RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON

    RANDOM          shift and go to state 128

    randomInFor                    shift and go to state 127

state 116

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType . RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 117

    (26) statement -> TELAARANA LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 130


state 118

    (27) statement -> OBJECT LPAREN numberType COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 131


state 119

    (3) blocklist -> MAIN SEMICOLON statementList END . SEMICOLON

    SEMICOLON       shift and go to state 132


state 120

    (18) statement -> BALLOON LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 133


state 121

    (19) statement -> DOW LPAREN numberType RPAREN statement ENDDO . SEMICOLON

    SEMICOLON       shift and go to state 134


state 122

    (20) statement -> RANDOM LPAREN arrayType COLON numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 135

state 123

    (21) statement -> IF LPAREN condition RPAREN SEMICOLON statement . ENDIF SEMICOLON

    ENDIF           shift and go to state 136


state 124

    (51) factor -> ID SLPAREN NUMBER SRPAREN .

    MULT            reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    DIVIDE          reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    ASSIGN          reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    NE              reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    LESS            reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    GREATER         reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQLESS          reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQGREATER       reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQUAL           reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    PLUS            reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    MINUS           reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)
    RPAREN          reduce using rule 51 (factor -> ID SLPAREN NUMBER SRPAREN .)


state 125

    (22) statement -> INC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 126

    (23) statement -> DEC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 138


state 127

    (24) statement -> FOR numberType TIMES USING arrayType randomInFor . block FOREND SEMICOLON
    (2) block -> . variableDec statement statementList
    (7) variableDec -> . variableType ID NUMBER initiateVar SEMICOLON
    (8) variableDec -> . empty
    (13) variableType -> . INT
    (14) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (15) variableType -> . empty
    (55) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    INT             shift and go to state 7
    TEXTO           shift and go to state 8
    BALLOON         reduce using rule 55 (empty -> .)
    DOW             reduce using rule 55 (empty -> .)
    RANDOM          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    INC             reduce using rule 55 (empty -> .)
    DEC             reduce using rule 55 (empty -> .)
    FOR             reduce using rule 55 (empty -> .)
    FORASIGNWORD    reduce using rule 55 (empty -> .)
    TELAARANA       reduce using rule 55 (empty -> .)
    OBJECT          reduce using rule 55 (empty -> .)
    ID              reduce using rule 55 (empty -> .)
    FOREND          reduce using rule 55 (empty -> .)

  ! INT             [ reduce using rule 55 (empty -> .) ]
  ! TEXTO           [ reduce using rule 55 (empty -> .) ]

    block                          shift and go to state 139
    variableDec                    shift and go to state 4
    variableType                   shift and go to state 5
    empty                          shift and go to state 6

state 128

    (31) randomInFor -> RANDOM . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 140


state 129

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN . DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON

    DO              shift and go to state 141


state 130

    (26) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 142


state 131

    (27) statement -> OBJECT LPAREN numberType COLON numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 143

state 132

    (3) blocklist -> MAIN SEMICOLON statementList END SEMICOLON .

    $end            reduce using rule 3 (blocklist -> MAIN SEMICOLON statementList END SEMICOLON .)


state 133

    (18) statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 18 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 134

    (19) statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .

    INT             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    TEXTO           reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    ID              reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    BALLOON         reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    DOW             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    RANDOM          reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    IF              reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    INC             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    DEC             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    FOR             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    FORASIGNWORD    reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    TELAARANA       reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    OBJECT          reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    END             reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    FOREND          reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    ENDDO           reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    ENDIF           reduce using rule 19 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)


state 135

    (20) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 136

    (21) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 145


state 137

    (22) statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 22 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 138

    (23) statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 23 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 139

    (24) statement -> FOR numberType TIMES USING arrayType randomInFor block . FOREND SEMICOLON

    FOREND          shift and go to state 146


state 140

    (31) randomInFor -> RANDOM LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 147

state 141

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO . ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON

    ASIGNWORD       shift and go to state 148


state 142

    (26) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 26 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 143

    (27) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 144

    (20) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 145

    (21) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .

    INT             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    TEXTO           reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ID              reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    BALLOON         reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    DOW             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    RANDOM          reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    IF              reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    INC             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    DEC             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FOR             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FORASIGNWORD    reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    TELAARANA       reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    OBJECT          reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    END             reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FOREND          reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDDO           reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDIF           reduce using rule 21 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)


state 146

    (24) statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND . SEMICOLON

    SEMICOLON       shift and go to state 151


state 147

    (31) randomInFor -> RANDOM LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 152


state 148

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD . LPAREN numberType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 153


state 149

    (27) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 154


state 150

    (20) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 20 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)


state 151

    (24) statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .

    INT             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    TEXTO           reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    ID              reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    BALLOON         reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    DOW             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    RANDOM          reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    IF              reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    INC             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    DEC             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    FOR             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    FORASIGNWORD    reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    TELAARANA       reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    OBJECT          reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    END             reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    FOREND          reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    ENDDO           reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)
    ENDIF           reduce using rule 24 (statement -> FOR numberType TIMES USING arrayType randomInFor block FOREND SEMICOLON .)


state 152

    (31) randomInFor -> RANDOM LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 155

state 153

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN . numberType COLON arrayType RPAREN SEMICOLON
    (52) numberType -> . NUMBER
    (53) numberType -> . INT ID

    NUMBER          shift and go to state 36
    INT             shift and go to state 37

    numberType                     shift and go to state 156

state 154

    (27) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    END             reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 27 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)


state 155

    (31) randomInFor -> RANDOM LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 157


state 156

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType . COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 158


state 157

    (31) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 158

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON . arrayType RPAREN SEMICOLON
    (54) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 52

    arrayType                      shift and go to state 160

state 159

    (31) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .

    INT             reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 31 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 160

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType . RPAREN SEMICOLON

    RPAREN          shift and go to state 161


state 161

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 162


state 162

    (25) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .

    INT             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    ID              reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    DOW             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    IF              reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    INC             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    DEC             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    FOR             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    END             reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    FOREND          reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 25 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN numberType COLON arrayType RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 2 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 4 resolved as shift
WARNING: shift/reduce conflict for DOW in state 4 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for INC in state 4 resolved as shift
WARNING: shift/reduce conflict for DEC in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 4 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 4 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 26 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 26 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 28 resolved as shift
WARNING: shift/reduce conflict for DOW in state 28 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 28 resolved as shift
WARNING: shift/reduce conflict for IF in state 28 resolved as shift
WARNING: shift/reduce conflict for INC in state 28 resolved as shift
WARNING: shift/reduce conflict for DEC in state 28 resolved as shift
WARNING: shift/reduce conflict for FOR in state 28 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 28 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 28 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 28 resolved as shift
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 127 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 127 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (variableDec -> empty)
WARNING: rejected rule (variableType -> empty) in state 6
WARNING: reduce/reduce conflict in state 27 resolved using rule (statementList -> empty)
WARNING: rejected rule (variableDec -> empty) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statementList -> empty)
WARNING: rejected rule (variableType -> empty) in state 27
WARNING: Rule (variableType -> empty) is never reduced
