Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ELEVATE
    ELSE
    FEND
    FLOAT
    PERCENT
    PROCEDURE
    QUOTE
    SLASH
    SPACE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> variableDec statement
Rule 3     variableDec -> variableType ID arrayStruct initiateVar SEMICOLON
Rule 4     variableDec -> empty
Rule 5     initiateVar -> ASSIGN value
Rule 6     initiateVar -> empty
Rule 7     arrayStruct -> SLPAREN NUMBER SRPAREN
Rule 8     arrayStruct -> empty
Rule 9     variableType -> INT
Rule 10    variableType -> TEXTO LPAREN NUMBER RPAREN
Rule 11    variableType -> empty
Rule 12    value -> NUMBER
Rule 13    value -> STRING
Rule 14    statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 15    statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
Rule 16    statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
Rule 17    statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
Rule 18    statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 19    statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 20    statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
Rule 21    statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
Rule 22    statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 23    statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
Rule 24    statement -> empty
Rule 25    randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 26    condition -> expression relation expression
Rule 27    relation -> ASSIGN
Rule 28    relation -> NE
Rule 29    relation -> LESS
Rule 30    relation -> GREATER
Rule 31    relation -> EQLESS
Rule 32    relation -> EQGREATER
Rule 33    relation -> EQUAL
Rule 34    expression -> term
Rule 35    expression -> addingOperator term
Rule 36    expression -> expression addingOperator term
Rule 37    addingOperator -> PLUS
Rule 38    addingOperator -> MINUS
Rule 39    term -> factor
Rule 40    term -> term multiplyingOperator factor
Rule 41    multiplyingOperator -> MULT
Rule 42    multiplyingOperator -> DIVIDE
Rule 43    factor -> ID
Rule 44    factor -> NUMBER
Rule 45    factor -> ID SLPAREN NUMBER SRPAREN
Rule 46    numberType -> NUMBER
Rule 47    numberType -> INT ID
Rule 48    arrayType -> ARRAY ID
Rule 49    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 48
ASIGNWORD            : 21
ASSIGN               : 5 27
BALLOON              : 14
COLON                : 14 16 16 18 19 21 21 22 23 23 25
COMMENT              : 
DEC                  : 19
DIVIDE               : 42
DO                   : 21
DOW                  : 15
ELEVATE              : 
ELSE                 : 
ENDDO                : 15
ENDIF                : 17
EQGREATER            : 32
EQLESS               : 31
EQUAL                : 33
FEND                 : 
FLOAT                : 
FOR                  : 20
FORASIGNWORD         : 21
FOREND               : 20
GREATER              : 30
ID                   : 3 43 45 47 48
IF                   : 17
INC                  : 18
INT                  : 9 47
LESS                 : 29
LPAREN               : 10 14 15 16 17 18 19 21 21 22 23 25
MINUS                : 38
MULT                 : 41
NE                   : 28
NUMBER               : 7 10 12 44 45 46
OBJECT               : 23
PERCENT              : 
PLUS                 : 37
PROCEDURE            : 
QUOTE                : 
RANDOM               : 16 25
RPAREN               : 10 14 15 16 17 18 19 21 21 22 23 25
SEMICOLON            : 3 14 15 16 17 17 18 19 20 21 22 23 25
SLASH                : 
SLPAREN              : 7 45
SPACE                : 
SRPAREN              : 7 45
STRING               : 13
TELAARANA            : 22
TEXTO                : 10
TIMES                : 20
USING                : 20
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addingOperator       : 35 36
arrayStruct          : 3
arrayType            : 16 20 21 21
block                : 1
condition            : 17
empty                : 4 6 8 11 24
expression           : 26 26 36
factor               : 39 40
initiateVar          : 3
multiplyingOperator  : 40
numberType           : 14 14 15 16 16 18 18 19 19 20 21 21 22 22 23 23 23 25 25
program              : 0
randomInFor          : 20
relation             : 26
statement            : 2 15 17 20
term                 : 34 35 36 40
value                : 5
variableDec          : 2
variableType         : 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . variableDec statement
    (3) variableDec -> . variableType ID arrayStruct initiateVar SEMICOLON
    (4) variableDec -> . empty
    (9) variableType -> . INT
    (10) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (11) variableType -> . empty
    (49) empty -> .

    INT             shift and go to state 6
    TEXTO           shift and go to state 7
    BALLOON         reduce using rule 49 (empty -> .)
    DOW             reduce using rule 49 (empty -> .)
    RANDOM          reduce using rule 49 (empty -> .)
    IF              reduce using rule 49 (empty -> .)
    INC             reduce using rule 49 (empty -> .)
    DEC             reduce using rule 49 (empty -> .)
    FOR             reduce using rule 49 (empty -> .)
    FORASIGNWORD    reduce using rule 49 (empty -> .)
    TELAARANA       reduce using rule 49 (empty -> .)
    OBJECT          reduce using rule 49 (empty -> .)
    $end            reduce using rule 49 (empty -> .)
    ID              reduce using rule 49 (empty -> .)

    program                        shift and go to state 1
    block                          shift and go to state 2
    variableDec                    shift and go to state 3
    variableType                   shift and go to state 4
    empty                          shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> variableDec . statement
    (14) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (15) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (16) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (17) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (18) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (20) statement -> . FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
    (21) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (22) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . empty
    (49) empty -> .

    BALLOON         shift and go to state 9
    DOW             shift and go to state 10
    RANDOM          shift and go to state 11
    IF              shift and go to state 12
    INC             shift and go to state 13
    DEC             shift and go to state 14
    FOR             shift and go to state 15
    FORASIGNWORD    shift and go to state 16
    TELAARANA       shift and go to state 17
    OBJECT          shift and go to state 18
    $end            reduce using rule 49 (empty -> .)

    statement                      shift and go to state 8
    empty                          shift and go to state 19

state 4

    (3) variableDec -> variableType . ID arrayStruct initiateVar SEMICOLON

    ID              shift and go to state 20


state 5

    (4) variableDec -> empty .
    (11) variableType -> empty .

    BALLOON         reduce using rule 4 (variableDec -> empty .)
    DOW             reduce using rule 4 (variableDec -> empty .)
    RANDOM          reduce using rule 4 (variableDec -> empty .)
    IF              reduce using rule 4 (variableDec -> empty .)
    INC             reduce using rule 4 (variableDec -> empty .)
    DEC             reduce using rule 4 (variableDec -> empty .)
    FOR             reduce using rule 4 (variableDec -> empty .)
    FORASIGNWORD    reduce using rule 4 (variableDec -> empty .)
    TELAARANA       reduce using rule 4 (variableDec -> empty .)
    OBJECT          reduce using rule 4 (variableDec -> empty .)
    $end            reduce using rule 4 (variableDec -> empty .)
    ID              reduce using rule 11 (variableType -> empty .)


state 6

    (9) variableType -> INT .

    ID              reduce using rule 9 (variableType -> INT .)


state 7

    (10) variableType -> TEXTO . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 21


state 8

    (2) block -> variableDec statement .

    $end            reduce using rule 2 (block -> variableDec statement .)


state 9

    (14) statement -> BALLOON . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 22


state 10

    (15) statement -> DOW . LPAREN numberType RPAREN statement ENDDO SEMICOLON

    LPAREN          shift and go to state 23


state 11

    (16) statement -> RANDOM . LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 24


state 12

    (17) statement -> IF . LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON

    LPAREN          shift and go to state 25


state 13

    (18) statement -> INC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 26


state 14

    (19) statement -> DEC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 27


state 15

    (20) statement -> FOR . numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 28

state 16

    (21) statement -> FORASIGNWORD . LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 31


state 17

    (22) statement -> TELAARANA . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 32


state 18

    (23) statement -> OBJECT . LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 19

    (24) statement -> empty .

    $end            reduce using rule 24 (statement -> empty .)
    ENDDO           reduce using rule 24 (statement -> empty .)
    ENDIF           reduce using rule 24 (statement -> empty .)
    FOREND          reduce using rule 24 (statement -> empty .)


state 20

    (3) variableDec -> variableType ID . arrayStruct initiateVar SEMICOLON
    (7) arrayStruct -> . SLPAREN NUMBER SRPAREN
    (8) arrayStruct -> . empty
    (49) empty -> .

    SLPAREN         shift and go to state 35
    ASSIGN          reduce using rule 49 (empty -> .)
    SEMICOLON       reduce using rule 49 (empty -> .)

    arrayStruct                    shift and go to state 34
    empty                          shift and go to state 36

state 21

    (10) variableType -> TEXTO LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 37


state 22

    (14) statement -> BALLOON LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 38

state 23

    (15) statement -> DOW LPAREN . numberType RPAREN statement ENDDO SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 39

state 24

    (16) statement -> RANDOM LPAREN . arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (48) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 41

    arrayType                      shift and go to state 40

state 25

    (17) statement -> IF LPAREN . condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (26) condition -> . expression relation expression
    (34) expression -> . term
    (35) expression -> . addingOperator term
    (36) expression -> . expression addingOperator term
    (39) term -> . factor
    (40) term -> . term multiplyingOperator factor
    (37) addingOperator -> . PLUS
    (38) addingOperator -> . MINUS
    (43) factor -> . ID
    (44) factor -> . NUMBER
    (45) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    condition                      shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    addingOperator                 shift and go to state 45
    factor                         shift and go to state 46

state 26

    (18) statement -> INC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 51

state 27

    (19) statement -> DEC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 52

state 28

    (20) statement -> FOR numberType . TIMES USING arrayType randomInFor statement FOREND SEMICOLON

    TIMES           shift and go to state 53


state 29

    (46) numberType -> NUMBER .

    TIMES           reduce using rule 46 (numberType -> NUMBER .)
    COLON           reduce using rule 46 (numberType -> NUMBER .)
    RPAREN          reduce using rule 46 (numberType -> NUMBER .)


state 30

    (47) numberType -> INT . ID

    ID              shift and go to state 54


state 31

    (21) statement -> FORASIGNWORD LPAREN . numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 55

state 32

    (22) statement -> TELAARANA LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 56

state 33

    (23) statement -> OBJECT LPAREN . numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 57

state 34

    (3) variableDec -> variableType ID arrayStruct . initiateVar SEMICOLON
    (5) initiateVar -> . ASSIGN value
    (6) initiateVar -> . empty
    (49) empty -> .

    ASSIGN          shift and go to state 59
    SEMICOLON       reduce using rule 49 (empty -> .)

    initiateVar                    shift and go to state 58
    empty                          shift and go to state 60

state 35

    (7) arrayStruct -> SLPAREN . NUMBER SRPAREN

    NUMBER          shift and go to state 61


state 36

    (8) arrayStruct -> empty .

    ASSIGN          reduce using rule 8 (arrayStruct -> empty .)
    SEMICOLON       reduce using rule 8 (arrayStruct -> empty .)


state 37

    (10) variableType -> TEXTO LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 62


state 38

    (14) statement -> BALLOON LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 63


state 39

    (15) statement -> DOW LPAREN numberType . RPAREN statement ENDDO SEMICOLON

    RPAREN          shift and go to state 64


state 40

    (16) statement -> RANDOM LPAREN arrayType . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 65


state 41

    (48) arrayType -> ARRAY . ID

    ID              shift and go to state 66


state 42

    (17) statement -> IF LPAREN condition . RPAREN SEMICOLON statement ENDIF SEMICOLON

    RPAREN          shift and go to state 67


state 43

    (26) condition -> expression . relation expression
    (36) expression -> expression . addingOperator term
    (27) relation -> . ASSIGN
    (28) relation -> . NE
    (29) relation -> . LESS
    (30) relation -> . GREATER
    (31) relation -> . EQLESS
    (32) relation -> . EQGREATER
    (33) relation -> . EQUAL
    (37) addingOperator -> . PLUS
    (38) addingOperator -> . MINUS

    ASSIGN          shift and go to state 70
    NE              shift and go to state 71
    LESS            shift and go to state 72
    GREATER         shift and go to state 73
    EQLESS          shift and go to state 74
    EQGREATER       shift and go to state 75
    EQUAL           shift and go to state 76
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48

    relation                       shift and go to state 68
    addingOperator                 shift and go to state 69

state 44

    (34) expression -> term .
    (40) term -> term . multiplyingOperator factor
    (41) multiplyingOperator -> . MULT
    (42) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 34 (expression -> term .)
    NE              reduce using rule 34 (expression -> term .)
    LESS            reduce using rule 34 (expression -> term .)
    GREATER         reduce using rule 34 (expression -> term .)
    EQLESS          reduce using rule 34 (expression -> term .)
    EQGREATER       reduce using rule 34 (expression -> term .)
    EQUAL           reduce using rule 34 (expression -> term .)
    PLUS            reduce using rule 34 (expression -> term .)
    MINUS           reduce using rule 34 (expression -> term .)
    RPAREN          reduce using rule 34 (expression -> term .)
    MULT            shift and go to state 78
    DIVIDE          shift and go to state 79

    multiplyingOperator            shift and go to state 77

state 45

    (35) expression -> addingOperator . term
    (39) term -> . factor
    (40) term -> . term multiplyingOperator factor
    (43) factor -> . ID
    (44) factor -> . NUMBER
    (45) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    term                           shift and go to state 80
    factor                         shift and go to state 46

state 46

    (39) term -> factor .

    MULT            reduce using rule 39 (term -> factor .)
    DIVIDE          reduce using rule 39 (term -> factor .)
    ASSIGN          reduce using rule 39 (term -> factor .)
    NE              reduce using rule 39 (term -> factor .)
    LESS            reduce using rule 39 (term -> factor .)
    GREATER         reduce using rule 39 (term -> factor .)
    EQLESS          reduce using rule 39 (term -> factor .)
    EQGREATER       reduce using rule 39 (term -> factor .)
    EQUAL           reduce using rule 39 (term -> factor .)
    PLUS            reduce using rule 39 (term -> factor .)
    MINUS           reduce using rule 39 (term -> factor .)
    RPAREN          reduce using rule 39 (term -> factor .)


state 47

    (37) addingOperator -> PLUS .

    ID              reduce using rule 37 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 37 (addingOperator -> PLUS .)


state 48

    (38) addingOperator -> MINUS .

    ID              reduce using rule 38 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 38 (addingOperator -> MINUS .)


state 49

    (43) factor -> ID .
    (45) factor -> ID . SLPAREN NUMBER SRPAREN

    MULT            reduce using rule 43 (factor -> ID .)
    DIVIDE          reduce using rule 43 (factor -> ID .)
    ASSIGN          reduce using rule 43 (factor -> ID .)
    NE              reduce using rule 43 (factor -> ID .)
    LESS            reduce using rule 43 (factor -> ID .)
    GREATER         reduce using rule 43 (factor -> ID .)
    EQLESS          reduce using rule 43 (factor -> ID .)
    EQGREATER       reduce using rule 43 (factor -> ID .)
    EQUAL           reduce using rule 43 (factor -> ID .)
    PLUS            reduce using rule 43 (factor -> ID .)
    MINUS           reduce using rule 43 (factor -> ID .)
    RPAREN          reduce using rule 43 (factor -> ID .)
    SLPAREN         shift and go to state 81


state 50

    (44) factor -> NUMBER .

    MULT            reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    ASSIGN          reduce using rule 44 (factor -> NUMBER .)
    NE              reduce using rule 44 (factor -> NUMBER .)
    LESS            reduce using rule 44 (factor -> NUMBER .)
    GREATER         reduce using rule 44 (factor -> NUMBER .)
    EQLESS          reduce using rule 44 (factor -> NUMBER .)
    EQGREATER       reduce using rule 44 (factor -> NUMBER .)
    EQUAL           reduce using rule 44 (factor -> NUMBER .)
    PLUS            reduce using rule 44 (factor -> NUMBER .)
    MINUS           reduce using rule 44 (factor -> NUMBER .)
    RPAREN          reduce using rule 44 (factor -> NUMBER .)


state 51

    (18) statement -> INC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 82


state 52

    (19) statement -> DEC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 83


state 53

    (20) statement -> FOR numberType TIMES . USING arrayType randomInFor statement FOREND SEMICOLON

    USING           shift and go to state 84


state 54

    (47) numberType -> INT ID .

    TIMES           reduce using rule 47 (numberType -> INT ID .)
    COLON           reduce using rule 47 (numberType -> INT ID .)
    RPAREN          reduce using rule 47 (numberType -> INT ID .)


state 55

    (21) statement -> FORASIGNWORD LPAREN numberType . COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 85


state 56

    (22) statement -> TELAARANA LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 86


state 57

    (23) statement -> OBJECT LPAREN numberType . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 87


state 58

    (3) variableDec -> variableType ID arrayStruct initiateVar . SEMICOLON

    SEMICOLON       shift and go to state 88


state 59

    (5) initiateVar -> ASSIGN . value
    (12) value -> . NUMBER
    (13) value -> . STRING

    NUMBER          shift and go to state 90
    STRING          shift and go to state 91

    value                          shift and go to state 89

state 60

    (6) initiateVar -> empty .

    SEMICOLON       reduce using rule 6 (initiateVar -> empty .)


state 61

    (7) arrayStruct -> SLPAREN NUMBER . SRPAREN

    SRPAREN         shift and go to state 92


state 62

    (10) variableType -> TEXTO LPAREN NUMBER RPAREN .

    ID              reduce using rule 10 (variableType -> TEXTO LPAREN NUMBER RPAREN .)


state 63

    (14) statement -> BALLOON LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 93

state 64

    (15) statement -> DOW LPAREN numberType RPAREN . statement ENDDO SEMICOLON
    (14) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (15) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (16) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (17) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (18) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (20) statement -> . FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
    (21) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (22) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . empty
    (49) empty -> .

    BALLOON         shift and go to state 9
    DOW             shift and go to state 10
    RANDOM          shift and go to state 11
    IF              shift and go to state 12
    INC             shift and go to state 13
    DEC             shift and go to state 14
    FOR             shift and go to state 15
    FORASIGNWORD    shift and go to state 16
    TELAARANA       shift and go to state 17
    OBJECT          shift and go to state 18
    ENDDO           reduce using rule 49 (empty -> .)

    statement                      shift and go to state 94
    empty                          shift and go to state 19

state 65

    (16) statement -> RANDOM LPAREN arrayType COLON . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 95

state 66

    (48) arrayType -> ARRAY ID .

    COLON           reduce using rule 48 (arrayType -> ARRAY ID .)
    RANDOM          reduce using rule 48 (arrayType -> ARRAY ID .)
    RPAREN          reduce using rule 48 (arrayType -> ARRAY ID .)


state 67

    (17) statement -> IF LPAREN condition RPAREN . SEMICOLON statement ENDIF SEMICOLON

    SEMICOLON       shift and go to state 96


state 68

    (26) condition -> expression relation . expression
    (34) expression -> . term
    (35) expression -> . addingOperator term
    (36) expression -> . expression addingOperator term
    (39) term -> . factor
    (40) term -> . term multiplyingOperator factor
    (37) addingOperator -> . PLUS
    (38) addingOperator -> . MINUS
    (43) factor -> . ID
    (44) factor -> . NUMBER
    (45) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    expression                     shift and go to state 97
    term                           shift and go to state 44
    addingOperator                 shift and go to state 45
    factor                         shift and go to state 46

state 69

    (36) expression -> expression addingOperator . term
    (39) term -> . factor
    (40) term -> . term multiplyingOperator factor
    (43) factor -> . ID
    (44) factor -> . NUMBER
    (45) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    term                           shift and go to state 98
    factor                         shift and go to state 46

state 70

    (27) relation -> ASSIGN .

    PLUS            reduce using rule 27 (relation -> ASSIGN .)
    MINUS           reduce using rule 27 (relation -> ASSIGN .)
    ID              reduce using rule 27 (relation -> ASSIGN .)
    NUMBER          reduce using rule 27 (relation -> ASSIGN .)


state 71

    (28) relation -> NE .

    PLUS            reduce using rule 28 (relation -> NE .)
    MINUS           reduce using rule 28 (relation -> NE .)
    ID              reduce using rule 28 (relation -> NE .)
    NUMBER          reduce using rule 28 (relation -> NE .)


state 72

    (29) relation -> LESS .

    PLUS            reduce using rule 29 (relation -> LESS .)
    MINUS           reduce using rule 29 (relation -> LESS .)
    ID              reduce using rule 29 (relation -> LESS .)
    NUMBER          reduce using rule 29 (relation -> LESS .)


state 73

    (30) relation -> GREATER .

    PLUS            reduce using rule 30 (relation -> GREATER .)
    MINUS           reduce using rule 30 (relation -> GREATER .)
    ID              reduce using rule 30 (relation -> GREATER .)
    NUMBER          reduce using rule 30 (relation -> GREATER .)


state 74

    (31) relation -> EQLESS .

    PLUS            reduce using rule 31 (relation -> EQLESS .)
    MINUS           reduce using rule 31 (relation -> EQLESS .)
    ID              reduce using rule 31 (relation -> EQLESS .)
    NUMBER          reduce using rule 31 (relation -> EQLESS .)


state 75

    (32) relation -> EQGREATER .

    PLUS            reduce using rule 32 (relation -> EQGREATER .)
    MINUS           reduce using rule 32 (relation -> EQGREATER .)
    ID              reduce using rule 32 (relation -> EQGREATER .)
    NUMBER          reduce using rule 32 (relation -> EQGREATER .)


state 76

    (33) relation -> EQUAL .

    PLUS            reduce using rule 33 (relation -> EQUAL .)
    MINUS           reduce using rule 33 (relation -> EQUAL .)
    ID              reduce using rule 33 (relation -> EQUAL .)
    NUMBER          reduce using rule 33 (relation -> EQUAL .)


state 77

    (40) term -> term multiplyingOperator . factor
    (43) factor -> . ID
    (44) factor -> . NUMBER
    (45) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 49
    NUMBER          shift and go to state 50

    factor                         shift and go to state 99

state 78

    (41) multiplyingOperator -> MULT .

    ID              reduce using rule 41 (multiplyingOperator -> MULT .)
    NUMBER          reduce using rule 41 (multiplyingOperator -> MULT .)


state 79

    (42) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 42 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 42 (multiplyingOperator -> DIVIDE .)


state 80

    (35) expression -> addingOperator term .
    (40) term -> term . multiplyingOperator factor
    (41) multiplyingOperator -> . MULT
    (42) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 35 (expression -> addingOperator term .)
    NE              reduce using rule 35 (expression -> addingOperator term .)
    LESS            reduce using rule 35 (expression -> addingOperator term .)
    GREATER         reduce using rule 35 (expression -> addingOperator term .)
    EQLESS          reduce using rule 35 (expression -> addingOperator term .)
    EQGREATER       reduce using rule 35 (expression -> addingOperator term .)
    EQUAL           reduce using rule 35 (expression -> addingOperator term .)
    PLUS            reduce using rule 35 (expression -> addingOperator term .)
    MINUS           reduce using rule 35 (expression -> addingOperator term .)
    RPAREN          reduce using rule 35 (expression -> addingOperator term .)
    MULT            shift and go to state 78
    DIVIDE          shift and go to state 79

    multiplyingOperator            shift and go to state 77

state 81

    (45) factor -> ID SLPAREN . NUMBER SRPAREN

    NUMBER          shift and go to state 100


state 82

    (18) statement -> INC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 101

state 83

    (19) statement -> DEC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 102

state 84

    (20) statement -> FOR numberType TIMES USING . arrayType randomInFor statement FOREND SEMICOLON
    (48) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 41

    arrayType                      shift and go to state 103

state 85

    (21) statement -> FORASIGNWORD LPAREN numberType COLON . numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 104

state 86

    (22) statement -> TELAARANA LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 105

state 87

    (23) statement -> OBJECT LPAREN numberType COLON . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 106

state 88

    (3) variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .

    BALLOON         reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    DOW             reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    RANDOM          reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    IF              reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    INC             reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    DEC             reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FOR             reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FORASIGNWORD    reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    TELAARANA       reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    OBJECT          reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    $end            reduce using rule 3 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)


state 89

    (5) initiateVar -> ASSIGN value .

    SEMICOLON       reduce using rule 5 (initiateVar -> ASSIGN value .)


state 90

    (12) value -> NUMBER .

    SEMICOLON       reduce using rule 12 (value -> NUMBER .)


state 91

    (13) value -> STRING .

    SEMICOLON       reduce using rule 13 (value -> STRING .)


state 92

    (7) arrayStruct -> SLPAREN NUMBER SRPAREN .

    ASSIGN          reduce using rule 7 (arrayStruct -> SLPAREN NUMBER SRPAREN .)
    SEMICOLON       reduce using rule 7 (arrayStruct -> SLPAREN NUMBER SRPAREN .)


state 93

    (14) statement -> BALLOON LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 107


state 94

    (15) statement -> DOW LPAREN numberType RPAREN statement . ENDDO SEMICOLON

    ENDDO           shift and go to state 108


state 95

    (16) statement -> RANDOM LPAREN arrayType COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 109


state 96

    (17) statement -> IF LPAREN condition RPAREN SEMICOLON . statement ENDIF SEMICOLON
    (14) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (15) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (16) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (17) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (18) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (20) statement -> . FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
    (21) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (22) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . empty
    (49) empty -> .

    BALLOON         shift and go to state 9
    DOW             shift and go to state 10
    RANDOM          shift and go to state 11
    IF              shift and go to state 12
    INC             shift and go to state 13
    DEC             shift and go to state 14
    FOR             shift and go to state 15
    FORASIGNWORD    shift and go to state 16
    TELAARANA       shift and go to state 17
    OBJECT          shift and go to state 18
    ENDIF           reduce using rule 49 (empty -> .)

    statement                      shift and go to state 110
    empty                          shift and go to state 19

state 97

    (26) condition -> expression relation expression .
    (36) expression -> expression . addingOperator term
    (37) addingOperator -> . PLUS
    (38) addingOperator -> . MINUS

    RPAREN          reduce using rule 26 (condition -> expression relation expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48

    addingOperator                 shift and go to state 69

state 98

    (36) expression -> expression addingOperator term .
    (40) term -> term . multiplyingOperator factor
    (41) multiplyingOperator -> . MULT
    (42) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 36 (expression -> expression addingOperator term .)
    NE              reduce using rule 36 (expression -> expression addingOperator term .)
    LESS            reduce using rule 36 (expression -> expression addingOperator term .)
    GREATER         reduce using rule 36 (expression -> expression addingOperator term .)
    EQLESS          reduce using rule 36 (expression -> expression addingOperator term .)
    EQGREATER       reduce using rule 36 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 36 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 36 (expression -> expression addingOperator term .)
    MINUS           reduce using rule 36 (expression -> expression addingOperator term .)
    RPAREN          reduce using rule 36 (expression -> expression addingOperator term .)
    MULT            shift and go to state 78
    DIVIDE          shift and go to state 79

    multiplyingOperator            shift and go to state 77

state 99

    (40) term -> term multiplyingOperator factor .

    MULT            reduce using rule 40 (term -> term multiplyingOperator factor .)
    DIVIDE          reduce using rule 40 (term -> term multiplyingOperator factor .)
    ASSIGN          reduce using rule 40 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 40 (term -> term multiplyingOperator factor .)
    LESS            reduce using rule 40 (term -> term multiplyingOperator factor .)
    GREATER         reduce using rule 40 (term -> term multiplyingOperator factor .)
    EQLESS          reduce using rule 40 (term -> term multiplyingOperator factor .)
    EQGREATER       reduce using rule 40 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 40 (term -> term multiplyingOperator factor .)
    PLUS            reduce using rule 40 (term -> term multiplyingOperator factor .)
    MINUS           reduce using rule 40 (term -> term multiplyingOperator factor .)
    RPAREN          reduce using rule 40 (term -> term multiplyingOperator factor .)


state 100

    (45) factor -> ID SLPAREN NUMBER . SRPAREN

    SRPAREN         shift and go to state 111


state 101

    (18) statement -> INC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 112


state 102

    (19) statement -> DEC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 113


state 103

    (20) statement -> FOR numberType TIMES USING arrayType . randomInFor statement FOREND SEMICOLON
    (25) randomInFor -> . RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON

    RANDOM          shift and go to state 115

    randomInFor                    shift and go to state 114

state 104

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType . RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 105

    (22) statement -> TELAARANA LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 117


state 106

    (23) statement -> OBJECT LPAREN numberType COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 118


state 107

    (14) statement -> BALLOON LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 119


state 108

    (15) statement -> DOW LPAREN numberType RPAREN statement ENDDO . SEMICOLON

    SEMICOLON       shift and go to state 120


state 109

    (16) statement -> RANDOM LPAREN arrayType COLON numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 121

state 110

    (17) statement -> IF LPAREN condition RPAREN SEMICOLON statement . ENDIF SEMICOLON

    ENDIF           shift and go to state 122


state 111

    (45) factor -> ID SLPAREN NUMBER SRPAREN .

    MULT            reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    DIVIDE          reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    ASSIGN          reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    NE              reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    LESS            reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    GREATER         reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQLESS          reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQGREATER       reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQUAL           reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    PLUS            reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    MINUS           reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)
    RPAREN          reduce using rule 45 (factor -> ID SLPAREN NUMBER SRPAREN .)


state 112

    (18) statement -> INC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 123


state 113

    (19) statement -> DEC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 124


state 114

    (20) statement -> FOR numberType TIMES USING arrayType randomInFor . statement FOREND SEMICOLON
    (14) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (15) statement -> . DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON
    (16) statement -> . RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON
    (17) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (18) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (19) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (20) statement -> . FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON
    (21) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (22) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (23) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . empty
    (49) empty -> .

    BALLOON         shift and go to state 9
    DOW             shift and go to state 10
    RANDOM          shift and go to state 11
    IF              shift and go to state 12
    INC             shift and go to state 13
    DEC             shift and go to state 14
    FOR             shift and go to state 15
    FORASIGNWORD    shift and go to state 16
    TELAARANA       shift and go to state 17
    OBJECT          shift and go to state 18
    FOREND          reduce using rule 49 (empty -> .)

    statement                      shift and go to state 125
    empty                          shift and go to state 19

state 115

    (25) randomInFor -> RANDOM . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 126


state 116

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN . DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    DO              shift and go to state 127


state 117

    (22) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 128


state 118

    (23) statement -> OBJECT LPAREN numberType COLON numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 129

state 119

    (14) statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 14 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 14 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 14 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 14 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 120

    (15) statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .

    $end            reduce using rule 15 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    ENDDO           reduce using rule 15 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    ENDIF           reduce using rule 15 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)
    FOREND          reduce using rule 15 (statement -> DOW LPAREN numberType RPAREN statement ENDDO SEMICOLON .)


state 121

    (16) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 130


state 122

    (17) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 131


state 123

    (18) statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 18 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 18 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 18 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 18 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 124

    (19) statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 19 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 19 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 19 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 19 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 125

    (20) statement -> FOR numberType TIMES USING arrayType randomInFor statement . FOREND SEMICOLON

    FOREND          shift and go to state 132


state 126

    (25) randomInFor -> RANDOM LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 133

state 127

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO . ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    ASIGNWORD       shift and go to state 134


state 128

    (22) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 22 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 22 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 22 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 22 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 129

    (23) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 135


state 130

    (16) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 136


state 131

    (17) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .

    $end            reduce using rule 17 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDDO           reduce using rule 17 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDIF           reduce using rule 17 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FOREND          reduce using rule 17 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)


state 132

    (20) statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND . SEMICOLON

    SEMICOLON       shift and go to state 137


state 133

    (25) randomInFor -> RANDOM LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 138


state 134

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD . LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 139


state 135

    (23) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 140


state 136

    (16) statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 16 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 16 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 16 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 16 (statement -> RANDOM LPAREN arrayType COLON numberType COLON numberType RPAREN SEMICOLON .)


state 137

    (20) statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON .

    $end            reduce using rule 20 (statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON .)
    ENDDO           reduce using rule 20 (statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON .)
    ENDIF           reduce using rule 20 (statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON .)
    FOREND          reduce using rule 20 (statement -> FOR numberType TIMES USING arrayType randomInFor statement FOREND SEMICOLON .)


state 138

    (25) randomInFor -> RANDOM LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (46) numberType -> . NUMBER
    (47) numberType -> . INT ID

    NUMBER          shift and go to state 29
    INT             shift and go to state 30

    numberType                     shift and go to state 141

state 139

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN . arrayType COLON arrayType RPAREN SEMICOLON
    (48) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 41

    arrayType                      shift and go to state 142

state 140

    (23) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 23 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 23 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 23 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 23 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)


state 141

    (25) randomInFor -> RANDOM LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 143


state 142

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType . COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 144


state 143

    (25) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 145


state 144

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON . arrayType RPAREN SEMICOLON
    (48) arrayType -> . ARRAY ID

    ARRAY           shift and go to state 41

    arrayType                      shift and go to state 146

state 145

    (25) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .

    BALLOON         reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 25 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 146

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType . RPAREN SEMICOLON

    RPAREN          shift and go to state 147


state 147

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 148

    (21) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .

    $end            reduce using rule 21 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 21 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 21 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    FOREND          reduce using rule 21 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)

