Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ELEVATE
    ELSE
    FEND
    FLOAT
    PERCENT
    PROCEDURE
    QUOTE
    SLASH
    SPACE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> varDecl valueAsign statement
Rule 3     valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 4     valueAsign -> ID ASSIGN STRING SEMICOLON
Rule 5     valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON
Rule 6     valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON
Rule 7     varDecl -> identList SEMICOLON
Rule 8     varDecl -> INT ID ASSIGN NUMBER SEMICOLON
Rule 9     varDecl -> TEXTO ID ASSIGN STRING SEMICOLON
Rule 10    varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
Rule 11    varDecl -> INT ID SLPAREN NUMBER SRPAREN SEMICOLON
Rule 12    varDecl -> empty
Rule 13    identList -> variableType ID
Rule 14    identList -> identList COLON ID
Rule 15    variableType -> INT
Rule 16    variableType -> TEXTO
Rule 17    statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
Rule 18    statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN
Rule 19    statement -> IF LPAREN condition RPAREN SEMICOLON statementList
Rule 20    statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
Rule 21    statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
Rule 22    statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
Rule 23    statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
Rule 24    statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 25    statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
Rule 26    statement -> empty
Rule 27    statementList -> statement
Rule 28    statementList -> statementList statement
Rule 29    randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON
Rule 30    condition -> expression relation expression
Rule 31    relation -> ASSIGN
Rule 32    relation -> NE
Rule 33    relation -> LESS
Rule 34    relation -> GREATER
Rule 35    relation -> EQLESS
Rule 36    relation -> EQGREATER
Rule 37    relation -> EQUAL
Rule 38    expression -> term
Rule 39    expression -> addingOperator term
Rule 40    expression -> expression addingOperator term
Rule 41    addingOperator -> PLUS
Rule 42    addingOperator -> MINUS
Rule 43    term -> factor
Rule 44    term -> term multiplyingOperator factor
Rule 45    multiplyingOperator -> MULT
Rule 46    multiplyingOperator -> DIVIDE
Rule 47    factor -> ID
Rule 48    factor -> NUMBER
Rule 49    factor -> ID SLPAREN NUMBER SRPAREN
Rule 50    numberType -> NUMBER
Rule 51    numberType -> INT ID
Rule 52    arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
Rule 53    arrayType -> ARRAY ID
Rule 54    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 53
ASIGNWORD            : 23
ASSIGN               : 4 5 6 8 9 31
BALLOON              : 3
COLON                : 3 14 18 18 20 21 23 23 24 25 25 29
COMMENT              : 
DEC                  : 21
DIVIDE               : 46
DO                   : 23
DOW                  : 17
ELEVATE              : 
ELSE                 : 
ENDDO                : 17
EQGREATER            : 36
EQLESS               : 35
EQUAL                : 37
FEND                 : 
FLOAT                : 
FOR                  : 22
FORASIGNWORD         : 23
FOREND               : 22
GREATER              : 34
ID                   : 4 5 6 8 9 10 11 13 14 18 18 18 20 21 22 29 29 47 49 51 52 53
IF                   : 19
INC                  : 20
INT                  : 8 11 15 51
LESS                 : 33
LPAREN               : 3 10 17 18 19 20 21 23 23 24 25 29 52
MINUS                : 42
MULT                 : 45
NE                   : 32
NUMBER               : 5 6 6 8 10 10 11 20 21 22 48 49 50 52 52
OBJECT               : 25
PERCENT              : 
PLUS                 : 41
PROCEDURE            : 
QUOTE                : 
RANDOM               : 18
RPAREN               : 3 10 17 18 19 20 21 23 23 24 25 29 52
SEMICOLON            : 3 4 5 6 7 8 9 10 11 17 19 20 21 22 23 24 25 29 52
SLASH                : 
SLPAREN              : 5 6 10 11 49 52
SPACE                : 
SRPAREN              : 5 6 10 11 49 52
STRING               : 4 5 9
TELARANA             : 24
TEXTO                : 9 10 16 52
TIMES                : 22
USING                : 22
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addingOperator       : 39 40
arrayType            : 23 23
block                : 1
condition            : 19
empty                : 12 26
expression           : 30 30 40
factor               : 43 44
identList            : 7 14
multiplyingOperator  : 44
numberType           : 3 3 17 23 23 24 24 25 25 25
program              : 0
randomInFor          : 22
relation             : 30
statement            : 2 27 28
statementList        : 17 19 22 28
term                 : 38 39 40 44
valueAsign           : 2
varDecl              : 2
variableType         : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . varDecl valueAsign statement
    (7) varDecl -> . identList SEMICOLON
    (8) varDecl -> . INT ID ASSIGN NUMBER SEMICOLON
    (9) varDecl -> . TEXTO ID ASSIGN STRING SEMICOLON
    (10) varDecl -> . TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
    (11) varDecl -> . INT ID SLPAREN NUMBER SRPAREN SEMICOLON
    (12) varDecl -> . empty
    (13) identList -> . variableType ID
    (14) identList -> . identList COLON ID
    (54) empty -> .
    (15) variableType -> . INT
    (16) variableType -> . TEXTO

    INT             shift and go to state 5
    TEXTO           shift and go to state 6
    BALLOON         reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)

    program                        shift and go to state 1
    block                          shift and go to state 2
    varDecl                        shift and go to state 3
    identList                      shift and go to state 4
    empty                          shift and go to state 7
    variableType                   shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> varDecl . valueAsign statement
    (3) valueAsign -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (4) valueAsign -> . ID ASSIGN STRING SEMICOLON
    (5) valueAsign -> . ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON
    (6) valueAsign -> . ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON

    BALLOON         shift and go to state 10
    ID              shift and go to state 11

    valueAsign                     shift and go to state 9

state 4

    (7) varDecl -> identList . SEMICOLON
    (14) identList -> identList . COLON ID

    SEMICOLON       shift and go to state 12
    COLON           shift and go to state 13


state 5

    (8) varDecl -> INT . ID ASSIGN NUMBER SEMICOLON
    (11) varDecl -> INT . ID SLPAREN NUMBER SRPAREN SEMICOLON
    (15) variableType -> INT .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 14

  ! ID              [ reduce using rule 15 (variableType -> INT .) ]


state 6

    (9) varDecl -> TEXTO . ID ASSIGN STRING SEMICOLON
    (10) varDecl -> TEXTO . LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
    (16) variableType -> TEXTO .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 15
    LPAREN          shift and go to state 16

  ! ID              [ reduce using rule 16 (variableType -> TEXTO .) ]


state 7

    (12) varDecl -> empty .

    BALLOON         reduce using rule 12 (varDecl -> empty .)
    ID              reduce using rule 12 (varDecl -> empty .)


state 8

    (13) identList -> variableType . ID

    ID              shift and go to state 17


state 9

    (2) block -> varDecl valueAsign . statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27
    $end            reduce using rule 54 (empty -> .)

    statement                      shift and go to state 18
    empty                          shift and go to state 28

state 10

    (3) valueAsign -> BALLOON . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 29


state 11

    (4) valueAsign -> ID . ASSIGN STRING SEMICOLON
    (5) valueAsign -> ID . SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON
    (6) valueAsign -> ID . SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 30
    SLPAREN         shift and go to state 31


state 12

    (7) varDecl -> identList SEMICOLON .

    BALLOON         reduce using rule 7 (varDecl -> identList SEMICOLON .)
    ID              reduce using rule 7 (varDecl -> identList SEMICOLON .)


state 13

    (14) identList -> identList COLON . ID

    ID              shift and go to state 32


state 14

    (8) varDecl -> INT ID . ASSIGN NUMBER SEMICOLON
    (11) varDecl -> INT ID . SLPAREN NUMBER SRPAREN SEMICOLON

    ASSIGN          shift and go to state 33
    SLPAREN         shift and go to state 34


state 15

    (9) varDecl -> TEXTO ID . ASSIGN STRING SEMICOLON

    ASSIGN          shift and go to state 35


state 16

    (10) varDecl -> TEXTO LPAREN . NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON

    NUMBER          shift and go to state 36


state 17

    (13) identList -> variableType ID .

    SEMICOLON       reduce using rule 13 (identList -> variableType ID .)
    COLON           reduce using rule 13 (identList -> variableType ID .)


state 18

    (2) block -> varDecl valueAsign statement .

    $end            reduce using rule 2 (block -> varDecl valueAsign statement .)


state 19

    (17) statement -> DOW . LPAREN numberType RPAREN statementList ENDDO SEMICOLON

    LPAREN          shift and go to state 37


state 20

    (18) statement -> RANDOM . LPAREN ID COLON ID COLON ID RPAREN

    LPAREN          shift and go to state 38


state 21

    (19) statement -> IF . LPAREN condition RPAREN SEMICOLON statementList

    LPAREN          shift and go to state 39


state 22

    (20) statement -> INC . LPAREN ID COLON NUMBER RPAREN SEMICOLON

    LPAREN          shift and go to state 40


state 23

    (21) statement -> DEC . LPAREN ID COLON NUMBER RPAREN SEMICOLON

    LPAREN          shift and go to state 41


state 24

    (22) statement -> FOR . NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON

    NUMBER          shift and go to state 42


state 25

    (23) statement -> FORASIGNWORD . LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 43


state 26

    (24) statement -> TELARANA . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 44


state 27

    (25) statement -> OBJECT . LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 45


state 28

    (26) statement -> empty .

    $end            reduce using rule 26 (statement -> empty .)
    ENDDO           reduce using rule 26 (statement -> empty .)
    DOW             reduce using rule 26 (statement -> empty .)
    RANDOM          reduce using rule 26 (statement -> empty .)
    IF              reduce using rule 26 (statement -> empty .)
    INC             reduce using rule 26 (statement -> empty .)
    DEC             reduce using rule 26 (statement -> empty .)
    FOR             reduce using rule 26 (statement -> empty .)
    FORASIGNWORD    reduce using rule 26 (statement -> empty .)
    TELARANA        reduce using rule 26 (statement -> empty .)
    OBJECT          reduce using rule 26 (statement -> empty .)
    FOREND          reduce using rule 26 (statement -> empty .)


state 29

    (3) valueAsign -> BALLOON LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 46

state 30

    (4) valueAsign -> ID ASSIGN . STRING SEMICOLON

    STRING          shift and go to state 49


state 31

    (5) valueAsign -> ID SLPAREN . NUMBER SRPAREN ASSIGN STRING SEMICOLON
    (6) valueAsign -> ID SLPAREN . NUMBER SRPAREN ASSIGN NUMBER SEMICOLON

    NUMBER          shift and go to state 50


state 32

    (14) identList -> identList COLON ID .

    SEMICOLON       reduce using rule 14 (identList -> identList COLON ID .)
    COLON           reduce using rule 14 (identList -> identList COLON ID .)


state 33

    (8) varDecl -> INT ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 51


state 34

    (11) varDecl -> INT ID SLPAREN . NUMBER SRPAREN SEMICOLON

    NUMBER          shift and go to state 52


state 35

    (9) varDecl -> TEXTO ID ASSIGN . STRING SEMICOLON

    STRING          shift and go to state 53


state 36

    (10) varDecl -> TEXTO LPAREN NUMBER . RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON

    RPAREN          shift and go to state 54


state 37

    (17) statement -> DOW LPAREN . numberType RPAREN statementList ENDDO SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 55

state 38

    (18) statement -> RANDOM LPAREN . ID COLON ID COLON ID RPAREN

    ID              shift and go to state 56


state 39

    (19) statement -> IF LPAREN . condition RPAREN SEMICOLON statementList
    (30) condition -> . expression relation expression
    (38) expression -> . term
    (39) expression -> . addingOperator term
    (40) expression -> . expression addingOperator term
    (43) term -> . factor
    (44) term -> . term multiplyingOperator factor
    (41) addingOperator -> . PLUS
    (42) addingOperator -> . MINUS
    (47) factor -> . ID
    (48) factor -> . NUMBER
    (49) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    ID              shift and go to state 64
    NUMBER          shift and go to state 65

    condition                      shift and go to state 57
    expression                     shift and go to state 58
    term                           shift and go to state 59
    addingOperator                 shift and go to state 60
    factor                         shift and go to state 61

state 40

    (20) statement -> INC LPAREN . ID COLON NUMBER RPAREN SEMICOLON

    ID              shift and go to state 66


state 41

    (21) statement -> DEC LPAREN . ID COLON NUMBER RPAREN SEMICOLON

    ID              shift and go to state 67


state 42

    (22) statement -> FOR NUMBER . TIMES USING ID randomInFor statementList FOREND SEMICOLON

    TIMES           shift and go to state 68


state 43

    (23) statement -> FORASIGNWORD LPAREN . numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 69

state 44

    (24) statement -> TELARANA LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 70

state 45

    (25) statement -> OBJECT LPAREN . numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 71

state 46

    (3) valueAsign -> BALLOON LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 72


state 47

    (50) numberType -> NUMBER .

    COLON           reduce using rule 50 (numberType -> NUMBER .)
    RPAREN          reduce using rule 50 (numberType -> NUMBER .)


state 48

    (51) numberType -> INT . ID

    ID              shift and go to state 73


state 49

    (4) valueAsign -> ID ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 74


state 50

    (5) valueAsign -> ID SLPAREN NUMBER . SRPAREN ASSIGN STRING SEMICOLON
    (6) valueAsign -> ID SLPAREN NUMBER . SRPAREN ASSIGN NUMBER SEMICOLON

    SRPAREN         shift and go to state 75


state 51

    (8) varDecl -> INT ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 76


state 52

    (11) varDecl -> INT ID SLPAREN NUMBER . SRPAREN SEMICOLON

    SRPAREN         shift and go to state 77


state 53

    (9) varDecl -> TEXTO ID ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 78


state 54

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN . ID SLPAREN NUMBER SRPAREN SEMICOLON

    ID              shift and go to state 79


state 55

    (17) statement -> DOW LPAREN numberType . RPAREN statementList ENDDO SEMICOLON

    RPAREN          shift and go to state 80


state 56

    (18) statement -> RANDOM LPAREN ID . COLON ID COLON ID RPAREN

    COLON           shift and go to state 81


state 57

    (19) statement -> IF LPAREN condition . RPAREN SEMICOLON statementList

    RPAREN          shift and go to state 82


state 58

    (30) condition -> expression . relation expression
    (40) expression -> expression . addingOperator term
    (31) relation -> . ASSIGN
    (32) relation -> . NE
    (33) relation -> . LESS
    (34) relation -> . GREATER
    (35) relation -> . EQLESS
    (36) relation -> . EQGREATER
    (37) relation -> . EQUAL
    (41) addingOperator -> . PLUS
    (42) addingOperator -> . MINUS

    ASSIGN          shift and go to state 85
    NE              shift and go to state 86
    LESS            shift and go to state 87
    GREATER         shift and go to state 88
    EQLESS          shift and go to state 89
    EQGREATER       shift and go to state 90
    EQUAL           shift and go to state 91
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63

    relation                       shift and go to state 83
    addingOperator                 shift and go to state 84

state 59

    (38) expression -> term .
    (44) term -> term . multiplyingOperator factor
    (45) multiplyingOperator -> . MULT
    (46) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 38 (expression -> term .)
    NE              reduce using rule 38 (expression -> term .)
    LESS            reduce using rule 38 (expression -> term .)
    GREATER         reduce using rule 38 (expression -> term .)
    EQLESS          reduce using rule 38 (expression -> term .)
    EQGREATER       reduce using rule 38 (expression -> term .)
    EQUAL           reduce using rule 38 (expression -> term .)
    PLUS            reduce using rule 38 (expression -> term .)
    MINUS           reduce using rule 38 (expression -> term .)
    RPAREN          reduce using rule 38 (expression -> term .)
    MULT            shift and go to state 93
    DIVIDE          shift and go to state 94

    multiplyingOperator            shift and go to state 92

state 60

    (39) expression -> addingOperator . term
    (43) term -> . factor
    (44) term -> . term multiplyingOperator factor
    (47) factor -> . ID
    (48) factor -> . NUMBER
    (49) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 65

    term                           shift and go to state 95
    factor                         shift and go to state 61

state 61

    (43) term -> factor .

    MULT            reduce using rule 43 (term -> factor .)
    DIVIDE          reduce using rule 43 (term -> factor .)
    ASSIGN          reduce using rule 43 (term -> factor .)
    NE              reduce using rule 43 (term -> factor .)
    LESS            reduce using rule 43 (term -> factor .)
    GREATER         reduce using rule 43 (term -> factor .)
    EQLESS          reduce using rule 43 (term -> factor .)
    EQGREATER       reduce using rule 43 (term -> factor .)
    EQUAL           reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)


state 62

    (41) addingOperator -> PLUS .

    ID              reduce using rule 41 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 41 (addingOperator -> PLUS .)


state 63

    (42) addingOperator -> MINUS .

    ID              reduce using rule 42 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 42 (addingOperator -> MINUS .)


state 64

    (47) factor -> ID .
    (49) factor -> ID . SLPAREN NUMBER SRPAREN

    MULT            reduce using rule 47 (factor -> ID .)
    DIVIDE          reduce using rule 47 (factor -> ID .)
    ASSIGN          reduce using rule 47 (factor -> ID .)
    NE              reduce using rule 47 (factor -> ID .)
    LESS            reduce using rule 47 (factor -> ID .)
    GREATER         reduce using rule 47 (factor -> ID .)
    EQLESS          reduce using rule 47 (factor -> ID .)
    EQGREATER       reduce using rule 47 (factor -> ID .)
    EQUAL           reduce using rule 47 (factor -> ID .)
    PLUS            reduce using rule 47 (factor -> ID .)
    MINUS           reduce using rule 47 (factor -> ID .)
    RPAREN          reduce using rule 47 (factor -> ID .)
    SLPAREN         shift and go to state 96


state 65

    (48) factor -> NUMBER .

    MULT            reduce using rule 48 (factor -> NUMBER .)
    DIVIDE          reduce using rule 48 (factor -> NUMBER .)
    ASSIGN          reduce using rule 48 (factor -> NUMBER .)
    NE              reduce using rule 48 (factor -> NUMBER .)
    LESS            reduce using rule 48 (factor -> NUMBER .)
    GREATER         reduce using rule 48 (factor -> NUMBER .)
    EQLESS          reduce using rule 48 (factor -> NUMBER .)
    EQGREATER       reduce using rule 48 (factor -> NUMBER .)
    EQUAL           reduce using rule 48 (factor -> NUMBER .)
    PLUS            reduce using rule 48 (factor -> NUMBER .)
    MINUS           reduce using rule 48 (factor -> NUMBER .)
    RPAREN          reduce using rule 48 (factor -> NUMBER .)


state 66

    (20) statement -> INC LPAREN ID . COLON NUMBER RPAREN SEMICOLON

    COLON           shift and go to state 97


state 67

    (21) statement -> DEC LPAREN ID . COLON NUMBER RPAREN SEMICOLON

    COLON           shift and go to state 98


state 68

    (22) statement -> FOR NUMBER TIMES . USING ID randomInFor statementList FOREND SEMICOLON

    USING           shift and go to state 99


state 69

    (23) statement -> FORASIGNWORD LPAREN numberType . COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 100


state 70

    (24) statement -> TELARANA LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 101


state 71

    (25) statement -> OBJECT LPAREN numberType . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 102


state 72

    (3) valueAsign -> BALLOON LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 103

state 73

    (51) numberType -> INT ID .

    COLON           reduce using rule 51 (numberType -> INT ID .)
    RPAREN          reduce using rule 51 (numberType -> INT ID .)


state 74

    (4) valueAsign -> ID ASSIGN STRING SEMICOLON .

    DOW             reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    RANDOM          reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    IF              reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    INC             reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    DEC             reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    FOR             reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    FORASIGNWORD    reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    TELARANA        reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    OBJECT          reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)
    $end            reduce using rule 4 (valueAsign -> ID ASSIGN STRING SEMICOLON .)


state 75

    (5) valueAsign -> ID SLPAREN NUMBER SRPAREN . ASSIGN STRING SEMICOLON
    (6) valueAsign -> ID SLPAREN NUMBER SRPAREN . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 104


state 76

    (8) varDecl -> INT ID ASSIGN NUMBER SEMICOLON .

    BALLOON         reduce using rule 8 (varDecl -> INT ID ASSIGN NUMBER SEMICOLON .)
    ID              reduce using rule 8 (varDecl -> INT ID ASSIGN NUMBER SEMICOLON .)


state 77

    (11) varDecl -> INT ID SLPAREN NUMBER SRPAREN . SEMICOLON

    SEMICOLON       shift and go to state 105


state 78

    (9) varDecl -> TEXTO ID ASSIGN STRING SEMICOLON .

    BALLOON         reduce using rule 9 (varDecl -> TEXTO ID ASSIGN STRING SEMICOLON .)
    ID              reduce using rule 9 (varDecl -> TEXTO ID ASSIGN STRING SEMICOLON .)


state 79

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN ID . SLPAREN NUMBER SRPAREN SEMICOLON

    SLPAREN         shift and go to state 106


state 80

    (17) statement -> DOW LPAREN numberType RPAREN . statementList ENDDO SEMICOLON
    (27) statementList -> . statement
    (28) statementList -> . statementList statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27
    ENDDO           reduce using rule 54 (empty -> .)

  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]

    statementList                  shift and go to state 107
    statement                      shift and go to state 108
    empty                          shift and go to state 28

state 81

    (18) statement -> RANDOM LPAREN ID COLON . ID COLON ID RPAREN

    ID              shift and go to state 109


state 82

    (19) statement -> IF LPAREN condition RPAREN . SEMICOLON statementList

    SEMICOLON       shift and go to state 110


state 83

    (30) condition -> expression relation . expression
    (38) expression -> . term
    (39) expression -> . addingOperator term
    (40) expression -> . expression addingOperator term
    (43) term -> . factor
    (44) term -> . term multiplyingOperator factor
    (41) addingOperator -> . PLUS
    (42) addingOperator -> . MINUS
    (47) factor -> . ID
    (48) factor -> . NUMBER
    (49) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    ID              shift and go to state 64
    NUMBER          shift and go to state 65

    expression                     shift and go to state 111
    term                           shift and go to state 59
    addingOperator                 shift and go to state 60
    factor                         shift and go to state 61

state 84

    (40) expression -> expression addingOperator . term
    (43) term -> . factor
    (44) term -> . term multiplyingOperator factor
    (47) factor -> . ID
    (48) factor -> . NUMBER
    (49) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 65

    term                           shift and go to state 112
    factor                         shift and go to state 61

state 85

    (31) relation -> ASSIGN .

    PLUS            reduce using rule 31 (relation -> ASSIGN .)
    MINUS           reduce using rule 31 (relation -> ASSIGN .)
    ID              reduce using rule 31 (relation -> ASSIGN .)
    NUMBER          reduce using rule 31 (relation -> ASSIGN .)


state 86

    (32) relation -> NE .

    PLUS            reduce using rule 32 (relation -> NE .)
    MINUS           reduce using rule 32 (relation -> NE .)
    ID              reduce using rule 32 (relation -> NE .)
    NUMBER          reduce using rule 32 (relation -> NE .)


state 87

    (33) relation -> LESS .

    PLUS            reduce using rule 33 (relation -> LESS .)
    MINUS           reduce using rule 33 (relation -> LESS .)
    ID              reduce using rule 33 (relation -> LESS .)
    NUMBER          reduce using rule 33 (relation -> LESS .)


state 88

    (34) relation -> GREATER .

    PLUS            reduce using rule 34 (relation -> GREATER .)
    MINUS           reduce using rule 34 (relation -> GREATER .)
    ID              reduce using rule 34 (relation -> GREATER .)
    NUMBER          reduce using rule 34 (relation -> GREATER .)


state 89

    (35) relation -> EQLESS .

    PLUS            reduce using rule 35 (relation -> EQLESS .)
    MINUS           reduce using rule 35 (relation -> EQLESS .)
    ID              reduce using rule 35 (relation -> EQLESS .)
    NUMBER          reduce using rule 35 (relation -> EQLESS .)


state 90

    (36) relation -> EQGREATER .

    PLUS            reduce using rule 36 (relation -> EQGREATER .)
    MINUS           reduce using rule 36 (relation -> EQGREATER .)
    ID              reduce using rule 36 (relation -> EQGREATER .)
    NUMBER          reduce using rule 36 (relation -> EQGREATER .)


state 91

    (37) relation -> EQUAL .

    PLUS            reduce using rule 37 (relation -> EQUAL .)
    MINUS           reduce using rule 37 (relation -> EQUAL .)
    ID              reduce using rule 37 (relation -> EQUAL .)
    NUMBER          reduce using rule 37 (relation -> EQUAL .)


state 92

    (44) term -> term multiplyingOperator . factor
    (47) factor -> . ID
    (48) factor -> . NUMBER
    (49) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 65

    factor                         shift and go to state 113

state 93

    (45) multiplyingOperator -> MULT .

    ID              reduce using rule 45 (multiplyingOperator -> MULT .)
    NUMBER          reduce using rule 45 (multiplyingOperator -> MULT .)


state 94

    (46) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 46 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 46 (multiplyingOperator -> DIVIDE .)


state 95

    (39) expression -> addingOperator term .
    (44) term -> term . multiplyingOperator factor
    (45) multiplyingOperator -> . MULT
    (46) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 39 (expression -> addingOperator term .)
    NE              reduce using rule 39 (expression -> addingOperator term .)
    LESS            reduce using rule 39 (expression -> addingOperator term .)
    GREATER         reduce using rule 39 (expression -> addingOperator term .)
    EQLESS          reduce using rule 39 (expression -> addingOperator term .)
    EQGREATER       reduce using rule 39 (expression -> addingOperator term .)
    EQUAL           reduce using rule 39 (expression -> addingOperator term .)
    PLUS            reduce using rule 39 (expression -> addingOperator term .)
    MINUS           reduce using rule 39 (expression -> addingOperator term .)
    RPAREN          reduce using rule 39 (expression -> addingOperator term .)
    MULT            shift and go to state 93
    DIVIDE          shift and go to state 94

    multiplyingOperator            shift and go to state 92

state 96

    (49) factor -> ID SLPAREN . NUMBER SRPAREN

    NUMBER          shift and go to state 114


state 97

    (20) statement -> INC LPAREN ID COLON . NUMBER RPAREN SEMICOLON

    NUMBER          shift and go to state 115


state 98

    (21) statement -> DEC LPAREN ID COLON . NUMBER RPAREN SEMICOLON

    NUMBER          shift and go to state 116


state 99

    (22) statement -> FOR NUMBER TIMES USING . ID randomInFor statementList FOREND SEMICOLON

    ID              shift and go to state 117


state 100

    (23) statement -> FORASIGNWORD LPAREN numberType COLON . numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 118

state 101

    (24) statement -> TELARANA LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 119

state 102

    (25) statement -> OBJECT LPAREN numberType COLON . numberType COLON numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 120

state 103

    (3) valueAsign -> BALLOON LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 121


state 104

    (5) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN . STRING SEMICOLON
    (6) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN . NUMBER SEMICOLON

    STRING          shift and go to state 123
    NUMBER          shift and go to state 122


state 105

    (11) varDecl -> INT ID SLPAREN NUMBER SRPAREN SEMICOLON .

    BALLOON         reduce using rule 11 (varDecl -> INT ID SLPAREN NUMBER SRPAREN SEMICOLON .)
    ID              reduce using rule 11 (varDecl -> INT ID SLPAREN NUMBER SRPAREN SEMICOLON .)


state 106

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN . NUMBER SRPAREN SEMICOLON

    NUMBER          shift and go to state 124


state 107

    (17) statement -> DOW LPAREN numberType RPAREN statementList . ENDDO SEMICOLON
    (28) statementList -> statementList . statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for ENDDO resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    ENDDO           shift and go to state 125
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27

  ! ENDDO           [ reduce using rule 54 (empty -> .) ]
  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]

    statement                      shift and go to state 126
    empty                          shift and go to state 28

state 108

    (27) statementList -> statement .

    ENDDO           reduce using rule 27 (statementList -> statement .)
    DOW             reduce using rule 27 (statementList -> statement .)
    RANDOM          reduce using rule 27 (statementList -> statement .)
    IF              reduce using rule 27 (statementList -> statement .)
    INC             reduce using rule 27 (statementList -> statement .)
    DEC             reduce using rule 27 (statementList -> statement .)
    FOR             reduce using rule 27 (statementList -> statement .)
    FORASIGNWORD    reduce using rule 27 (statementList -> statement .)
    TELARANA        reduce using rule 27 (statementList -> statement .)
    OBJECT          reduce using rule 27 (statementList -> statement .)
    $end            reduce using rule 27 (statementList -> statement .)
    FOREND          reduce using rule 27 (statementList -> statement .)


state 109

    (18) statement -> RANDOM LPAREN ID COLON ID . COLON ID RPAREN

    COLON           shift and go to state 127


state 110

    (19) statement -> IF LPAREN condition RPAREN SEMICOLON . statementList
    (27) statementList -> . statement
    (28) statementList -> . statementList statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27
    $end            reduce using rule 54 (empty -> .)
    ENDDO           reduce using rule 54 (empty -> .)
    FOREND          reduce using rule 54 (empty -> .)

  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]

    statementList                  shift and go to state 128
    statement                      shift and go to state 108
    empty                          shift and go to state 28

state 111

    (30) condition -> expression relation expression .
    (40) expression -> expression . addingOperator term
    (41) addingOperator -> . PLUS
    (42) addingOperator -> . MINUS

    RPAREN          reduce using rule 30 (condition -> expression relation expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63

    addingOperator                 shift and go to state 84

state 112

    (40) expression -> expression addingOperator term .
    (44) term -> term . multiplyingOperator factor
    (45) multiplyingOperator -> . MULT
    (46) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 40 (expression -> expression addingOperator term .)
    NE              reduce using rule 40 (expression -> expression addingOperator term .)
    LESS            reduce using rule 40 (expression -> expression addingOperator term .)
    GREATER         reduce using rule 40 (expression -> expression addingOperator term .)
    EQLESS          reduce using rule 40 (expression -> expression addingOperator term .)
    EQGREATER       reduce using rule 40 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 40 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 40 (expression -> expression addingOperator term .)
    MINUS           reduce using rule 40 (expression -> expression addingOperator term .)
    RPAREN          reduce using rule 40 (expression -> expression addingOperator term .)
    MULT            shift and go to state 93
    DIVIDE          shift and go to state 94

    multiplyingOperator            shift and go to state 92

state 113

    (44) term -> term multiplyingOperator factor .

    MULT            reduce using rule 44 (term -> term multiplyingOperator factor .)
    DIVIDE          reduce using rule 44 (term -> term multiplyingOperator factor .)
    ASSIGN          reduce using rule 44 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 44 (term -> term multiplyingOperator factor .)
    LESS            reduce using rule 44 (term -> term multiplyingOperator factor .)
    GREATER         reduce using rule 44 (term -> term multiplyingOperator factor .)
    EQLESS          reduce using rule 44 (term -> term multiplyingOperator factor .)
    EQGREATER       reduce using rule 44 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 44 (term -> term multiplyingOperator factor .)
    PLUS            reduce using rule 44 (term -> term multiplyingOperator factor .)
    MINUS           reduce using rule 44 (term -> term multiplyingOperator factor .)
    RPAREN          reduce using rule 44 (term -> term multiplyingOperator factor .)


state 114

    (49) factor -> ID SLPAREN NUMBER . SRPAREN

    SRPAREN         shift and go to state 129


state 115

    (20) statement -> INC LPAREN ID COLON NUMBER . RPAREN SEMICOLON

    RPAREN          shift and go to state 130


state 116

    (21) statement -> DEC LPAREN ID COLON NUMBER . RPAREN SEMICOLON

    RPAREN          shift and go to state 131


state 117

    (22) statement -> FOR NUMBER TIMES USING ID . randomInFor statementList FOREND SEMICOLON
    (29) randomInFor -> . LPAREN ID COLON ID RPAREN SEMICOLON

    LPAREN          shift and go to state 133

    randomInFor                    shift and go to state 132

state 118

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType . RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    RPAREN          shift and go to state 134


state 119

    (24) statement -> TELARANA LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 135


state 120

    (25) statement -> OBJECT LPAREN numberType COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 136


state 121

    (3) valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 122

    (6) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 138


state 123

    (5) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 139


state 124

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER . SRPAREN SEMICOLON

    SRPAREN         shift and go to state 140


state 125

    (17) statement -> DOW LPAREN numberType RPAREN statementList ENDDO . SEMICOLON

    SEMICOLON       shift and go to state 141


state 126

    (28) statementList -> statementList statement .

    ENDDO           reduce using rule 28 (statementList -> statementList statement .)
    DOW             reduce using rule 28 (statementList -> statementList statement .)
    RANDOM          reduce using rule 28 (statementList -> statementList statement .)
    IF              reduce using rule 28 (statementList -> statementList statement .)
    INC             reduce using rule 28 (statementList -> statementList statement .)
    DEC             reduce using rule 28 (statementList -> statementList statement .)
    FOR             reduce using rule 28 (statementList -> statementList statement .)
    FORASIGNWORD    reduce using rule 28 (statementList -> statementList statement .)
    TELARANA        reduce using rule 28 (statementList -> statementList statement .)
    OBJECT          reduce using rule 28 (statementList -> statementList statement .)
    $end            reduce using rule 28 (statementList -> statementList statement .)
    FOREND          reduce using rule 28 (statementList -> statementList statement .)


state 127

    (18) statement -> RANDOM LPAREN ID COLON ID COLON . ID RPAREN

    ID              shift and go to state 142


state 128

    (19) statement -> IF LPAREN condition RPAREN SEMICOLON statementList .
    (28) statementList -> statementList . statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
  ! reduce/reduce conflict for ENDDO resolved using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
  ! reduce/reduce conflict for FOREND resolved using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
    $end            reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
    ENDDO           reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
    FOREND          reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .)
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27

  ! DOW             [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! RANDOM          [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! IF              [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! INC             [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! DEC             [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! FOR             [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! FORASIGNWORD    [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! TELARANA        [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! OBJECT          [ reduce using rule 19 (statement -> IF LPAREN condition RPAREN SEMICOLON statementList .) ]
  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]
  ! $end            [ reduce using rule 54 (empty -> .) ]
  ! ENDDO           [ reduce using rule 54 (empty -> .) ]
  ! FOREND          [ reduce using rule 54 (empty -> .) ]

    statement                      shift and go to state 126
    empty                          shift and go to state 28

state 129

    (49) factor -> ID SLPAREN NUMBER SRPAREN .

    MULT            reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    DIVIDE          reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    ASSIGN          reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    NE              reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    LESS            reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    GREATER         reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQLESS          reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQGREATER       reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQUAL           reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    PLUS            reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    MINUS           reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)
    RPAREN          reduce using rule 49 (factor -> ID SLPAREN NUMBER SRPAREN .)


state 130

    (20) statement -> INC LPAREN ID COLON NUMBER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 143


state 131

    (21) statement -> DEC LPAREN ID COLON NUMBER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 144


state 132

    (22) statement -> FOR NUMBER TIMES USING ID randomInFor . statementList FOREND SEMICOLON
    (27) statementList -> . statement
    (28) statementList -> . statementList statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27
    FOREND          reduce using rule 54 (empty -> .)

  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]

    statementList                  shift and go to state 145
    statement                      shift and go to state 108
    empty                          shift and go to state 28

state 133

    (29) randomInFor -> LPAREN . ID COLON ID RPAREN SEMICOLON

    ID              shift and go to state 146


state 134

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN . DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    DO              shift and go to state 147


state 135

    (24) statement -> TELARANA LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 136

    (25) statement -> OBJECT LPAREN numberType COLON numberType COLON . numberType RPAREN SEMICOLON
    (50) numberType -> . NUMBER
    (51) numberType -> . INT ID

    NUMBER          shift and go to state 47
    INT             shift and go to state 48

    numberType                     shift and go to state 149

state 137

    (3) valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .

    DOW             reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELARANA        reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    $end            reduce using rule 3 (valueAsign -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 138

    (6) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .

    DOW             reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    RANDOM          reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    INC             reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    DEC             reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    FOR             reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    FORASIGNWORD    reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    TELARANA        reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    OBJECT          reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)
    $end            reduce using rule 6 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN NUMBER SEMICOLON .)


state 139

    (5) valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .

    DOW             reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    RANDOM          reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    IF              reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    INC             reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    DEC             reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    FOR             reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    FORASIGNWORD    reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    TELARANA        reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    OBJECT          reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)
    $end            reduce using rule 5 (valueAsign -> ID SLPAREN NUMBER SRPAREN ASSIGN STRING SEMICOLON .)


state 140

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 141

    (17) statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .

    $end            reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    ENDDO           reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    DOW             reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    RANDOM          reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    IF              reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    INC             reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    DEC             reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FOR             reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FORASIGNWORD    reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    TELARANA        reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    OBJECT          reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FOREND          reduce using rule 17 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)


state 142

    (18) statement -> RANDOM LPAREN ID COLON ID COLON ID . RPAREN

    RPAREN          shift and go to state 151


state 143

    (20) statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .

    $end            reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    ENDDO           reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    DOW             reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    RANDOM          reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    IF              reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    INC             reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    DEC             reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FOR             reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    TELARANA        reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    OBJECT          reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FOREND          reduce using rule 20 (statement -> INC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)


state 144

    (21) statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .

    $end            reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    ENDDO           reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    DOW             reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    RANDOM          reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    IF              reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    INC             reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    DEC             reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    TELARANA        reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    OBJECT          reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)
    FOREND          reduce using rule 21 (statement -> DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON .)


state 145

    (22) statement -> FOR NUMBER TIMES USING ID randomInFor statementList . FOREND SEMICOLON
    (28) statementList -> statementList . statement
    (17) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (18) statement -> . RANDOM LPAREN ID COLON ID COLON ID RPAREN
    (19) statement -> . IF LPAREN condition RPAREN SEMICOLON statementList
    (20) statement -> . INC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (21) statement -> . DEC LPAREN ID COLON NUMBER RPAREN SEMICOLON
    (22) statement -> . FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON
    (23) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON
    (24) statement -> . TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (25) statement -> . OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . empty
    (54) empty -> .

  ! shift/reduce conflict for FOREND resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
    FOREND          shift and go to state 152
    DOW             shift and go to state 19
    RANDOM          shift and go to state 20
    IF              shift and go to state 21
    INC             shift and go to state 22
    DEC             shift and go to state 23
    FOR             shift and go to state 24
    FORASIGNWORD    shift and go to state 25
    TELARANA        shift and go to state 26
    OBJECT          shift and go to state 27

  ! FOREND          [ reduce using rule 54 (empty -> .) ]
  ! DOW             [ reduce using rule 54 (empty -> .) ]
  ! RANDOM          [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! INC             [ reduce using rule 54 (empty -> .) ]
  ! DEC             [ reduce using rule 54 (empty -> .) ]
  ! FOR             [ reduce using rule 54 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 54 (empty -> .) ]
  ! TELARANA        [ reduce using rule 54 (empty -> .) ]
  ! OBJECT          [ reduce using rule 54 (empty -> .) ]

    statement                      shift and go to state 126
    empty                          shift and go to state 28

state 146

    (29) randomInFor -> LPAREN ID . COLON ID RPAREN SEMICOLON

    COLON           shift and go to state 153


state 147

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO . ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    ASIGNWORD       shift and go to state 154


state 148

    (24) statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELARANA        reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 24 (statement -> TELARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 149

    (25) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 150

    (10) varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .

    BALLOON         reduce using rule 10 (varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .)
    ID              reduce using rule 10 (varDecl -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .)


state 151

    (18) statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .

    $end            reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    ENDDO           reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    DOW             reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    RANDOM          reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    IF              reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    INC             reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    DEC             reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    FOR             reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    FORASIGNWORD    reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    TELARANA        reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    OBJECT          reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)
    FOREND          reduce using rule 18 (statement -> RANDOM LPAREN ID COLON ID COLON ID RPAREN .)


state 152

    (22) statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND . SEMICOLON

    SEMICOLON       shift and go to state 156


state 153

    (29) randomInFor -> LPAREN ID COLON . ID RPAREN SEMICOLON

    ID              shift and go to state 157


state 154

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD . LPAREN arrayType COLON arrayType RPAREN SEMICOLON

    LPAREN          shift and go to state 158


state 155

    (25) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 156

    (22) statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .

    $end            reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    ENDDO           reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    DOW             reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    RANDOM          reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    IF              reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    INC             reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    DEC             reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    FOR             reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    FORASIGNWORD    reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    TELARANA        reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    OBJECT          reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)
    FOREND          reduce using rule 22 (statement -> FOR NUMBER TIMES USING ID randomInFor statementList FOREND SEMICOLON .)


state 157

    (29) randomInFor -> LPAREN ID COLON ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 160


state 158

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN . arrayType COLON arrayType RPAREN SEMICOLON
    (52) arrayType -> . TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
    (53) arrayType -> . ARRAY ID

    TEXTO           shift and go to state 162
    ARRAY           shift and go to state 163

    arrayType                      shift and go to state 161

state 159

    (25) statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .

    $end            reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    TELARANA        reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 25 (statement -> OBJECT LPAREN numberType COLON numberType COLON numberType RPAREN SEMICOLON .)


state 160

    (29) randomInFor -> LPAREN ID COLON ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 164


state 161

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType . COLON arrayType RPAREN SEMICOLON

    COLON           shift and go to state 165


state 162

    (52) arrayType -> TEXTO . LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON

    LPAREN          shift and go to state 166


state 163

    (53) arrayType -> ARRAY . ID

    ID              shift and go to state 167


state 164

    (29) randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .

    DOW             reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    RANDOM          reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    IF              reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    INC             reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    DEC             reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    TELARANA        reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    OBJECT          reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)
    FOREND          reduce using rule 29 (randomInFor -> LPAREN ID COLON ID RPAREN SEMICOLON .)


state 165

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON . arrayType RPAREN SEMICOLON
    (52) arrayType -> . TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON
    (53) arrayType -> . ARRAY ID

    TEXTO           shift and go to state 162
    ARRAY           shift and go to state 163

    arrayType                      shift and go to state 168

state 166

    (52) arrayType -> TEXTO LPAREN . NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON

    NUMBER          shift and go to state 169


state 167

    (53) arrayType -> ARRAY ID .

    COLON           reduce using rule 53 (arrayType -> ARRAY ID .)
    RPAREN          reduce using rule 53 (arrayType -> ARRAY ID .)


state 168

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType . RPAREN SEMICOLON

    RPAREN          shift and go to state 170


state 169

    (52) arrayType -> TEXTO LPAREN NUMBER . RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 170

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 172


state 171

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN . ID SLPAREN NUMBER SRPAREN SEMICOLON

    ID              shift and go to state 173


state 172

    (23) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .

    $end            reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    DOW             reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    IF              reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    INC             reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    DEC             reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    TELARANA        reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)
    FOREND          reduce using rule 23 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayType COLON arrayType RPAREN SEMICOLON .)


state 173

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN ID . SLPAREN NUMBER SRPAREN SEMICOLON

    SLPAREN         shift and go to state 174


state 174

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN . NUMBER SRPAREN SEMICOLON

    NUMBER          shift and go to state 175


state 175

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER . SRPAREN SEMICOLON

    SRPAREN         shift and go to state 176


state 176

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN . SEMICOLON

    SEMICOLON       shift and go to state 177


state 177

    (52) arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .

    COLON           reduce using rule 52 (arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .)
    RPAREN          reduce using rule 52 (arrayType -> TEXTO LPAREN NUMBER RPAREN ID SLPAREN NUMBER SRPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for DOW in state 80 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for INC in state 80 resolved as shift
WARNING: shift/reduce conflict for DEC in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 80 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 80 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 80 resolved as shift
WARNING: shift/reduce conflict for ENDDO in state 107 resolved as shift
WARNING: shift/reduce conflict for DOW in state 107 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 107 resolved as shift
WARNING: shift/reduce conflict for IF in state 107 resolved as shift
WARNING: shift/reduce conflict for INC in state 107 resolved as shift
WARNING: shift/reduce conflict for DEC in state 107 resolved as shift
WARNING: shift/reduce conflict for FOR in state 107 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 107 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 107 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 107 resolved as shift
WARNING: shift/reduce conflict for DOW in state 110 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for INC in state 110 resolved as shift
WARNING: shift/reduce conflict for DEC in state 110 resolved as shift
WARNING: shift/reduce conflict for FOR in state 110 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 110 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 110 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 110 resolved as shift
WARNING: shift/reduce conflict for DOW in state 128 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 128 resolved as shift
WARNING: shift/reduce conflict for IF in state 128 resolved as shift
WARNING: shift/reduce conflict for INC in state 128 resolved as shift
WARNING: shift/reduce conflict for DEC in state 128 resolved as shift
WARNING: shift/reduce conflict for FOR in state 128 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 128 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 128 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 128 resolved as shift
WARNING: shift/reduce conflict for DOW in state 128 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 128 resolved as shift
WARNING: shift/reduce conflict for IF in state 128 resolved as shift
WARNING: shift/reduce conflict for INC in state 128 resolved as shift
WARNING: shift/reduce conflict for DEC in state 128 resolved as shift
WARNING: shift/reduce conflict for FOR in state 128 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 128 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 128 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 128 resolved as shift
WARNING: shift/reduce conflict for DOW in state 132 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for INC in state 132 resolved as shift
WARNING: shift/reduce conflict for DEC in state 132 resolved as shift
WARNING: shift/reduce conflict for FOR in state 132 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 132 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 132 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 132 resolved as shift
WARNING: shift/reduce conflict for FOREND in state 145 resolved as shift
WARNING: shift/reduce conflict for DOW in state 145 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for INC in state 145 resolved as shift
WARNING: shift/reduce conflict for DEC in state 145 resolved as shift
WARNING: shift/reduce conflict for FOR in state 145 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 145 resolved as shift
WARNING: shift/reduce conflict for TELARANA in state 145 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 145 resolved as shift
WARNING: reduce/reduce conflict in state 128 resolved using rule (statement -> IF LPAREN condition RPAREN SEMICOLON statementList)
WARNING: rejected rule (empty -> <empty>) in state 128
