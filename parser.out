Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ELEVATE
    ELSE
    FLOAT
    FORA
    INTA
    MAIN
    PERCENT
    PROCEDURE
    QUOTE
    SLASH
    SPACE
    STR
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> BEGIN subB END SEMICOLON
Rule 2     subB -> subB ID LC block RC
Rule 3     subB -> empty
Rule 4     block -> statementList variableDec statement
Rule 5     block -> empty
Rule 6     statementList -> statementList1 statementList2
Rule 7     statementList -> empty
Rule 8     variableDec -> variableType ID arrayStruct initiateVar SEMICOLON
Rule 9     variableDec -> empty
Rule 10    initiateVar -> ASSIGN value
Rule 11    initiateVar -> empty
Rule 12    arrayStruct -> LPAREN NUMBER RPAREN
Rule 13    arrayStruct -> empty
Rule 14    xType -> numberType
Rule 15    xType -> arrayType2
Rule 16    variableType -> INT
Rule 17    variableType -> TEXTO LPAREN NUMBER RPAREN
Rule 18    variableType -> empty
Rule 19    value -> NUMBER
Rule 20    value -> STRING
Rule 21    statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 22    statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
Rule 23    statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
Rule 24    statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
Rule 25    statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 26    statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 27    statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
Rule 28    statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
Rule 29    statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 30    statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
Rule 31    statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON
Rule 32    statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
Rule 33    statement -> empty
Rule 34    statementList1 -> block statement
Rule 35    statementList2 -> block variableDec
Rule 36    randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON
Rule 37    condition -> expression relation expression
Rule 38    relation -> ASSIGN
Rule 39    relation -> NE
Rule 40    relation -> LESS
Rule 41    relation -> GREATER
Rule 42    relation -> EQLESS
Rule 43    relation -> EQGREATER
Rule 44    relation -> EQUAL
Rule 45    expression -> term
Rule 46    expression -> addingOperator term
Rule 47    expression -> expression addingOperator term
Rule 48    addingOperator -> PLUS
Rule 49    addingOperator -> MINUS
Rule 50    term -> factor
Rule 51    term -> term multiplyingOperator factor
Rule 52    multiplyingOperator -> MULT
Rule 53    multiplyingOperator -> DIVIDE
Rule 54    factor -> ID
Rule 55    factor -> NUMBER
Rule 56    factor -> ID SLPAREN NUMBER SRPAREN
Rule 57    numberType -> NUMBER
Rule 58    numberType -> INT ID
Rule 59    arrayType -> ARRAY ID LPAREN numberType RPAREN
Rule 60    arrayType2 -> ARRAY ID LPAREN ID RPAREN
Rule 61    arrayT -> ARRAY ID
Rule 62    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 32 59 60 61
ASIGNWORD            : 28
ASSIGN               : 10 38
BALLOON              : 21
BEGIN                : 1
COLON                : 21 23 23 25 26 28 28 29 30 30 36
COMMENT              : 
DEC                  : 26
DIVIDE               : 53
DO                   : 28
DOW                  : 22
ELEVATE              : 
ELSE                 : 
END                  : 1
ENDDO                : 22
ENDIF                : 24
EQGREATER            : 43
EQLESS               : 42
EQUAL                : 44
FEND                 : 31
FLOAT                : 
FOR                  : 27 31
FORA                 : 
FORASIGNWORD         : 28
FOREND               : 27
GREATER              : 41
ID                   : 2 8 31 32 54 56 58 59 60 60 61
IF                   : 24
INC                  : 25
INT                  : 16 58
INTA                 : 
LC                   : 2
LESS                 : 40
LPAREN               : 12 17 21 22 23 24 25 26 28 28 29 30 32 36 59 60
MAIN                 : 
MINUS                : 49
MULT                 : 52
NE                   : 39
NUMBER               : 12 17 19 55 56 57
OBJECT               : 30
PERCENT              : 
PLUS                 : 48
PROCEDURE            : 
QUOTE                : 
RANDOM               : 23 36
RC                   : 2
RPAREN               : 12 17 21 22 23 24 25 26 28 28 29 30 32 36 59 60
SEMICOLON            : 1 8 21 22 23 24 24 25 26 27 28 29 30 31 32 36
SLASH                : 
SLPAREN              : 56
SPACE                : 
SRPAREN              : 56
STR                  : 
STRING               : 20
TELAARANA            : 29
TEXTO                : 17
TIMES                : 27 31
USING                : 27 31
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addingOperator       : 46 47
arrayStruct          : 8
arrayT               : 23 27 28 28
arrayType            : 
arrayType2           : 15
block                : 2 27 34 35
condition            : 24
empty                : 3 5 7 9 11 13 18 33
expression           : 37 37 47
factor               : 50 51
initiateVar          : 8 32
multiplyingOperator  : 51
numberType           : 14 21 21 22 23 23 25 25 26 26 27 28 28 29 29 30 30 31 32 36 36 59
program              : 0
randomInFor          : 27
relation             : 37
statement            : 4 24 34
statementList        : 4 22 31
statementList1       : 6
statementList2       : 6
subB                 : 1 2
term                 : 45 46 47 51
value                : 10
variableDec          : 4 35
variableType         : 8
xType                : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . BEGIN subB END SEMICOLON

    BEGIN           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> BEGIN . subB END SEMICOLON
    (2) subB -> . subB ID LC block RC
    (3) subB -> . empty
    (62) empty -> .

    END             reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

    subB                           shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> BEGIN subB . END SEMICOLON
    (2) subB -> subB . ID LC block RC

    END             shift and go to state 5
    ID              shift and go to state 6


state 4

    (3) subB -> empty .

    END             reduce using rule 3 (subB -> empty .)
    ID              reduce using rule 3 (subB -> empty .)


state 5

    (1) program -> BEGIN subB END . SEMICOLON

    SEMICOLON       shift and go to state 7


state 6

    (2) subB -> subB ID . LC block RC

    LC              shift and go to state 8


state 7

    (1) program -> BEGIN subB END SEMICOLON .

    $end            reduce using rule 1 (program -> BEGIN subB END SEMICOLON .)


state 8

    (2) subB -> subB ID LC . block RC
    (4) block -> . statementList variableDec statement
    (5) block -> . empty
    (6) statementList -> . statementList1 statementList2
    (7) statementList -> . empty
    (62) empty -> .
    (34) statementList1 -> . block statement

    RC              reduce using rule 62 (empty -> .)
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

    block                          shift and go to state 9
    statementList                  shift and go to state 10
    empty                          shift and go to state 11
    statementList1                 shift and go to state 12

state 9

    (2) subB -> subB ID LC block . RC
    (34) statementList1 -> block . statement
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (62) empty -> .

  ! shift/reduce conflict for RC resolved as shift
  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
    RC              shift and go to state 13
    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

  ! RC              [ reduce using rule 62 (empty -> .) ]
  ! BALLOON         [ reduce using rule 62 (empty -> .) ]
  ! DOW             [ reduce using rule 62 (empty -> .) ]
  ! RANDOM          [ reduce using rule 62 (empty -> .) ]
  ! IF              [ reduce using rule 62 (empty -> .) ]
  ! INC             [ reduce using rule 62 (empty -> .) ]
  ! DEC             [ reduce using rule 62 (empty -> .) ]
  ! FOR             [ reduce using rule 62 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 62 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 62 (empty -> .) ]
  ! OBJECT          [ reduce using rule 62 (empty -> .) ]
  ! ARRAY           [ reduce using rule 62 (empty -> .) ]

    statement                      shift and go to state 14
    empty                          shift and go to state 26

state 10

    (4) block -> statementList . variableDec statement
    (8) variableDec -> . variableType ID arrayStruct initiateVar SEMICOLON
    (9) variableDec -> . empty
    (16) variableType -> . INT
    (17) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (18) variableType -> . empty
    (62) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    INT             shift and go to state 30
    TEXTO           shift and go to state 31
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    RC              reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    ENDDO           reduce using rule 62 (empty -> .)
    FEND            reduce using rule 62 (empty -> .)
    FOREND          reduce using rule 62 (empty -> .)

  ! INT             [ reduce using rule 62 (empty -> .) ]
  ! TEXTO           [ reduce using rule 62 (empty -> .) ]

    variableDec                    shift and go to state 27
    variableType                   shift and go to state 28
    empty                          shift and go to state 29

state 11

    (5) block -> empty .
    (7) statementList -> empty .

  ! reduce/reduce conflict for RC resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for BALLOON resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for DOW resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for RANDOM resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for INC resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for DEC resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FORASIGNWORD resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for TELAARANA resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for OBJECT resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for ARRAY resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for TEXTO resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for ENDDO resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FEND resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FOREND resolved using rule 5 (block -> empty .)
    RC              reduce using rule 5 (block -> empty .)
    BALLOON         reduce using rule 5 (block -> empty .)
    DOW             reduce using rule 5 (block -> empty .)
    RANDOM          reduce using rule 5 (block -> empty .)
    IF              reduce using rule 5 (block -> empty .)
    INC             reduce using rule 5 (block -> empty .)
    DEC             reduce using rule 5 (block -> empty .)
    FOR             reduce using rule 5 (block -> empty .)
    FORASIGNWORD    reduce using rule 5 (block -> empty .)
    TELAARANA       reduce using rule 5 (block -> empty .)
    OBJECT          reduce using rule 5 (block -> empty .)
    ARRAY           reduce using rule 5 (block -> empty .)
    INT             reduce using rule 5 (block -> empty .)
    TEXTO           reduce using rule 5 (block -> empty .)
    ID              reduce using rule 5 (block -> empty .)
    ENDDO           reduce using rule 5 (block -> empty .)
    FEND            reduce using rule 5 (block -> empty .)
    FOREND          reduce using rule 5 (block -> empty .)

  ! RC              [ reduce using rule 7 (statementList -> empty .) ]
  ! BALLOON         [ reduce using rule 7 (statementList -> empty .) ]
  ! DOW             [ reduce using rule 7 (statementList -> empty .) ]
  ! RANDOM          [ reduce using rule 7 (statementList -> empty .) ]
  ! IF              [ reduce using rule 7 (statementList -> empty .) ]
  ! INC             [ reduce using rule 7 (statementList -> empty .) ]
  ! DEC             [ reduce using rule 7 (statementList -> empty .) ]
  ! FOR             [ reduce using rule 7 (statementList -> empty .) ]
  ! FORASIGNWORD    [ reduce using rule 7 (statementList -> empty .) ]
  ! TELAARANA       [ reduce using rule 7 (statementList -> empty .) ]
  ! OBJECT          [ reduce using rule 7 (statementList -> empty .) ]
  ! ARRAY           [ reduce using rule 7 (statementList -> empty .) ]
  ! INT             [ reduce using rule 7 (statementList -> empty .) ]
  ! TEXTO           [ reduce using rule 7 (statementList -> empty .) ]
  ! ID              [ reduce using rule 7 (statementList -> empty .) ]
  ! ENDDO           [ reduce using rule 7 (statementList -> empty .) ]
  ! FEND            [ reduce using rule 7 (statementList -> empty .) ]
  ! FOREND          [ reduce using rule 7 (statementList -> empty .) ]


state 12

    (6) statementList -> statementList1 . statementList2
    (35) statementList2 -> . block variableDec
    (4) block -> . statementList variableDec statement
    (5) block -> . empty
    (6) statementList -> . statementList1 statementList2
    (7) statementList -> . empty
    (62) empty -> .
    (34) statementList1 -> . block statement

    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    RC              reduce using rule 62 (empty -> .)
    ENDDO           reduce using rule 62 (empty -> .)
    FEND            reduce using rule 62 (empty -> .)
    FOREND          reduce using rule 62 (empty -> .)

    statementList1                 shift and go to state 12
    statementList2                 shift and go to state 32
    block                          shift and go to state 33
    statementList                  shift and go to state 10
    empty                          shift and go to state 11

state 13

    (2) subB -> subB ID LC block RC .

    END             reduce using rule 2 (subB -> subB ID LC block RC .)
    ID              reduce using rule 2 (subB -> subB ID LC block RC .)


state 14

    (34) statementList1 -> block statement .

    RC              reduce using rule 34 (statementList1 -> block statement .)
    BALLOON         reduce using rule 34 (statementList1 -> block statement .)
    DOW             reduce using rule 34 (statementList1 -> block statement .)
    RANDOM          reduce using rule 34 (statementList1 -> block statement .)
    IF              reduce using rule 34 (statementList1 -> block statement .)
    INC             reduce using rule 34 (statementList1 -> block statement .)
    DEC             reduce using rule 34 (statementList1 -> block statement .)
    FOR             reduce using rule 34 (statementList1 -> block statement .)
    FORASIGNWORD    reduce using rule 34 (statementList1 -> block statement .)
    TELAARANA       reduce using rule 34 (statementList1 -> block statement .)
    OBJECT          reduce using rule 34 (statementList1 -> block statement .)
    ARRAY           reduce using rule 34 (statementList1 -> block statement .)
    INT             reduce using rule 34 (statementList1 -> block statement .)
    TEXTO           reduce using rule 34 (statementList1 -> block statement .)
    ID              reduce using rule 34 (statementList1 -> block statement .)
    ENDDO           reduce using rule 34 (statementList1 -> block statement .)
    FEND            reduce using rule 34 (statementList1 -> block statement .)
    FOREND          reduce using rule 34 (statementList1 -> block statement .)


state 15

    (21) statement -> BALLOON . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 34


state 16

    (22) statement -> DOW . LPAREN numberType RPAREN statementList ENDDO SEMICOLON

    LPAREN          shift and go to state 35


state 17

    (23) statement -> RANDOM . LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 36


state 18

    (24) statement -> IF . LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON

    LPAREN          shift and go to state 37


state 19

    (25) statement -> INC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 38


state 20

    (26) statement -> DEC . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 21

    (27) statement -> FOR . numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (31) statement -> FOR . numberType TIMES USING ID statementList FEND SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 40

state 22

    (28) statement -> FORASIGNWORD . LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    LPAREN          shift and go to state 43


state 23

    (29) statement -> TELAARANA . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 44


state 24

    (30) statement -> OBJECT . LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 45


state 25

    (32) statement -> ARRAY . ID LPAREN numberType RPAREN initiateVar SEMICOLON

    ID              shift and go to state 46


state 26

    (33) statement -> empty .

    RC              reduce using rule 33 (statement -> empty .)
    BALLOON         reduce using rule 33 (statement -> empty .)
    DOW             reduce using rule 33 (statement -> empty .)
    RANDOM          reduce using rule 33 (statement -> empty .)
    IF              reduce using rule 33 (statement -> empty .)
    INC             reduce using rule 33 (statement -> empty .)
    DEC             reduce using rule 33 (statement -> empty .)
    FOR             reduce using rule 33 (statement -> empty .)
    FORASIGNWORD    reduce using rule 33 (statement -> empty .)
    TELAARANA       reduce using rule 33 (statement -> empty .)
    OBJECT          reduce using rule 33 (statement -> empty .)
    ARRAY           reduce using rule 33 (statement -> empty .)
    INT             reduce using rule 33 (statement -> empty .)
    TEXTO           reduce using rule 33 (statement -> empty .)
    ID              reduce using rule 33 (statement -> empty .)
    ENDDO           reduce using rule 33 (statement -> empty .)
    FEND            reduce using rule 33 (statement -> empty .)
    FOREND          reduce using rule 33 (statement -> empty .)
    ENDIF           reduce using rule 33 (statement -> empty .)


state 27

    (4) block -> statementList variableDec . statement
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (62) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    RC              reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    ENDDO           reduce using rule 62 (empty -> .)
    FEND            reduce using rule 62 (empty -> .)
    FOREND          reduce using rule 62 (empty -> .)

  ! BALLOON         [ reduce using rule 62 (empty -> .) ]
  ! DOW             [ reduce using rule 62 (empty -> .) ]
  ! RANDOM          [ reduce using rule 62 (empty -> .) ]
  ! IF              [ reduce using rule 62 (empty -> .) ]
  ! INC             [ reduce using rule 62 (empty -> .) ]
  ! DEC             [ reduce using rule 62 (empty -> .) ]
  ! FOR             [ reduce using rule 62 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 62 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 62 (empty -> .) ]
  ! OBJECT          [ reduce using rule 62 (empty -> .) ]
  ! ARRAY           [ reduce using rule 62 (empty -> .) ]

    statement                      shift and go to state 47
    empty                          shift and go to state 26

state 28

    (8) variableDec -> variableType . ID arrayStruct initiateVar SEMICOLON

    ID              shift and go to state 48


state 29

    (9) variableDec -> empty .
    (18) variableType -> empty .

  ! reduce/reduce conflict for ID resolved using rule 9 (variableDec -> empty .)
    BALLOON         reduce using rule 9 (variableDec -> empty .)
    DOW             reduce using rule 9 (variableDec -> empty .)
    RANDOM          reduce using rule 9 (variableDec -> empty .)
    IF              reduce using rule 9 (variableDec -> empty .)
    INC             reduce using rule 9 (variableDec -> empty .)
    DEC             reduce using rule 9 (variableDec -> empty .)
    FOR             reduce using rule 9 (variableDec -> empty .)
    FORASIGNWORD    reduce using rule 9 (variableDec -> empty .)
    TELAARANA       reduce using rule 9 (variableDec -> empty .)
    OBJECT          reduce using rule 9 (variableDec -> empty .)
    ARRAY           reduce using rule 9 (variableDec -> empty .)
    RC              reduce using rule 9 (variableDec -> empty .)
    INT             reduce using rule 9 (variableDec -> empty .)
    TEXTO           reduce using rule 9 (variableDec -> empty .)
    ID              reduce using rule 9 (variableDec -> empty .)
    ENDDO           reduce using rule 9 (variableDec -> empty .)
    FEND            reduce using rule 9 (variableDec -> empty .)
    FOREND          reduce using rule 9 (variableDec -> empty .)

  ! ID              [ reduce using rule 18 (variableType -> empty .) ]


state 30

    (16) variableType -> INT .

    ID              reduce using rule 16 (variableType -> INT .)


state 31

    (17) variableType -> TEXTO . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 49


state 32

    (6) statementList -> statementList1 statementList2 .

    RC              reduce using rule 6 (statementList -> statementList1 statementList2 .)
    BALLOON         reduce using rule 6 (statementList -> statementList1 statementList2 .)
    DOW             reduce using rule 6 (statementList -> statementList1 statementList2 .)
    RANDOM          reduce using rule 6 (statementList -> statementList1 statementList2 .)
    IF              reduce using rule 6 (statementList -> statementList1 statementList2 .)
    INC             reduce using rule 6 (statementList -> statementList1 statementList2 .)
    DEC             reduce using rule 6 (statementList -> statementList1 statementList2 .)
    FOR             reduce using rule 6 (statementList -> statementList1 statementList2 .)
    FORASIGNWORD    reduce using rule 6 (statementList -> statementList1 statementList2 .)
    TELAARANA       reduce using rule 6 (statementList -> statementList1 statementList2 .)
    OBJECT          reduce using rule 6 (statementList -> statementList1 statementList2 .)
    ARRAY           reduce using rule 6 (statementList -> statementList1 statementList2 .)
    INT             reduce using rule 6 (statementList -> statementList1 statementList2 .)
    TEXTO           reduce using rule 6 (statementList -> statementList1 statementList2 .)
    ID              reduce using rule 6 (statementList -> statementList1 statementList2 .)
    ENDDO           reduce using rule 6 (statementList -> statementList1 statementList2 .)
    FEND            reduce using rule 6 (statementList -> statementList1 statementList2 .)
    FOREND          reduce using rule 6 (statementList -> statementList1 statementList2 .)


state 33

    (35) statementList2 -> block . variableDec
    (34) statementList1 -> block . statement
    (8) variableDec -> . variableType ID arrayStruct initiateVar SEMICOLON
    (9) variableDec -> . empty
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (16) variableType -> . INT
    (17) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (18) variableType -> . empty
    (62) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    INT             shift and go to state 30
    TEXTO           shift and go to state 31
    ID              reduce using rule 62 (empty -> .)
    RC              reduce using rule 62 (empty -> .)
    ENDDO           reduce using rule 62 (empty -> .)
    FEND            reduce using rule 62 (empty -> .)
    FOREND          reduce using rule 62 (empty -> .)

  ! BALLOON         [ reduce using rule 62 (empty -> .) ]
  ! DOW             [ reduce using rule 62 (empty -> .) ]
  ! RANDOM          [ reduce using rule 62 (empty -> .) ]
  ! IF              [ reduce using rule 62 (empty -> .) ]
  ! INC             [ reduce using rule 62 (empty -> .) ]
  ! DEC             [ reduce using rule 62 (empty -> .) ]
  ! FOR             [ reduce using rule 62 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 62 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 62 (empty -> .) ]
  ! OBJECT          [ reduce using rule 62 (empty -> .) ]
  ! ARRAY           [ reduce using rule 62 (empty -> .) ]
  ! INT             [ reduce using rule 62 (empty -> .) ]
  ! TEXTO           [ reduce using rule 62 (empty -> .) ]

    variableDec                    shift and go to state 50
    statement                      shift and go to state 14
    variableType                   shift and go to state 28
    empty                          shift and go to state 51

state 34

    (21) statement -> BALLOON LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 52

state 35

    (22) statement -> DOW LPAREN . numberType RPAREN statementList ENDDO SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 53

state 36

    (23) statement -> RANDOM LPAREN . arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (61) arrayT -> . ARRAY ID

    ARRAY           shift and go to state 55

    arrayT                         shift and go to state 54

state 37

    (24) statement -> IF LPAREN . condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (37) condition -> . expression relation expression
    (45) expression -> . term
    (46) expression -> . addingOperator term
    (47) expression -> . expression addingOperator term
    (50) term -> . factor
    (51) term -> . term multiplyingOperator factor
    (48) addingOperator -> . PLUS
    (49) addingOperator -> . MINUS
    (54) factor -> . ID
    (55) factor -> . NUMBER
    (56) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              shift and go to state 63
    NUMBER          shift and go to state 64

    condition                      shift and go to state 56
    expression                     shift and go to state 57
    term                           shift and go to state 58
    addingOperator                 shift and go to state 59
    factor                         shift and go to state 60

state 38

    (25) statement -> INC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 65

state 39

    (26) statement -> DEC LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 66

state 40

    (27) statement -> FOR numberType . TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (31) statement -> FOR numberType . TIMES USING ID statementList FEND SEMICOLON

    TIMES           shift and go to state 67


state 41

    (57) numberType -> NUMBER .

    TIMES           reduce using rule 57 (numberType -> NUMBER .)
    COLON           reduce using rule 57 (numberType -> NUMBER .)
    RPAREN          reduce using rule 57 (numberType -> NUMBER .)


state 42

    (58) numberType -> INT . ID

    ID              shift and go to state 68


state 43

    (28) statement -> FORASIGNWORD LPAREN . numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 69

state 44

    (29) statement -> TELAARANA LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 70

state 45

    (30) statement -> OBJECT LPAREN . numberType COLON xType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 71

state 46

    (32) statement -> ARRAY ID . LPAREN numberType RPAREN initiateVar SEMICOLON

    LPAREN          shift and go to state 72


state 47

    (4) block -> statementList variableDec statement .

    RC              reduce using rule 4 (block -> statementList variableDec statement .)
    BALLOON         reduce using rule 4 (block -> statementList variableDec statement .)
    DOW             reduce using rule 4 (block -> statementList variableDec statement .)
    RANDOM          reduce using rule 4 (block -> statementList variableDec statement .)
    IF              reduce using rule 4 (block -> statementList variableDec statement .)
    INC             reduce using rule 4 (block -> statementList variableDec statement .)
    DEC             reduce using rule 4 (block -> statementList variableDec statement .)
    FOR             reduce using rule 4 (block -> statementList variableDec statement .)
    FORASIGNWORD    reduce using rule 4 (block -> statementList variableDec statement .)
    TELAARANA       reduce using rule 4 (block -> statementList variableDec statement .)
    OBJECT          reduce using rule 4 (block -> statementList variableDec statement .)
    ARRAY           reduce using rule 4 (block -> statementList variableDec statement .)
    INT             reduce using rule 4 (block -> statementList variableDec statement .)
    TEXTO           reduce using rule 4 (block -> statementList variableDec statement .)
    ID              reduce using rule 4 (block -> statementList variableDec statement .)
    ENDDO           reduce using rule 4 (block -> statementList variableDec statement .)
    FEND            reduce using rule 4 (block -> statementList variableDec statement .)
    FOREND          reduce using rule 4 (block -> statementList variableDec statement .)


state 48

    (8) variableDec -> variableType ID . arrayStruct initiateVar SEMICOLON
    (12) arrayStruct -> . LPAREN NUMBER RPAREN
    (13) arrayStruct -> . empty
    (62) empty -> .

    LPAREN          shift and go to state 74
    ASSIGN          reduce using rule 62 (empty -> .)
    SEMICOLON       reduce using rule 62 (empty -> .)

    arrayStruct                    shift and go to state 73
    empty                          shift and go to state 75

state 49

    (17) variableType -> TEXTO LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 76


state 50

    (35) statementList2 -> block variableDec .

    BALLOON         reduce using rule 35 (statementList2 -> block variableDec .)
    DOW             reduce using rule 35 (statementList2 -> block variableDec .)
    RANDOM          reduce using rule 35 (statementList2 -> block variableDec .)
    IF              reduce using rule 35 (statementList2 -> block variableDec .)
    INC             reduce using rule 35 (statementList2 -> block variableDec .)
    DEC             reduce using rule 35 (statementList2 -> block variableDec .)
    FOR             reduce using rule 35 (statementList2 -> block variableDec .)
    FORASIGNWORD    reduce using rule 35 (statementList2 -> block variableDec .)
    TELAARANA       reduce using rule 35 (statementList2 -> block variableDec .)
    OBJECT          reduce using rule 35 (statementList2 -> block variableDec .)
    ARRAY           reduce using rule 35 (statementList2 -> block variableDec .)
    INT             reduce using rule 35 (statementList2 -> block variableDec .)
    TEXTO           reduce using rule 35 (statementList2 -> block variableDec .)
    ID              reduce using rule 35 (statementList2 -> block variableDec .)
    RC              reduce using rule 35 (statementList2 -> block variableDec .)
    ENDDO           reduce using rule 35 (statementList2 -> block variableDec .)
    FEND            reduce using rule 35 (statementList2 -> block variableDec .)
    FOREND          reduce using rule 35 (statementList2 -> block variableDec .)


state 51

    (9) variableDec -> empty .
    (33) statement -> empty .
    (18) variableType -> empty .

  ! reduce/reduce conflict for BALLOON resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for DOW resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for RANDOM resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for INC resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for DEC resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for FORASIGNWORD resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for TELAARANA resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for OBJECT resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for ARRAY resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for TEXTO resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for RC resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for ENDDO resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for FEND resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for FOREND resolved using rule 9 (variableDec -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (variableDec -> empty .)
    BALLOON         reduce using rule 9 (variableDec -> empty .)
    DOW             reduce using rule 9 (variableDec -> empty .)
    RANDOM          reduce using rule 9 (variableDec -> empty .)
    IF              reduce using rule 9 (variableDec -> empty .)
    INC             reduce using rule 9 (variableDec -> empty .)
    DEC             reduce using rule 9 (variableDec -> empty .)
    FOR             reduce using rule 9 (variableDec -> empty .)
    FORASIGNWORD    reduce using rule 9 (variableDec -> empty .)
    TELAARANA       reduce using rule 9 (variableDec -> empty .)
    OBJECT          reduce using rule 9 (variableDec -> empty .)
    ARRAY           reduce using rule 9 (variableDec -> empty .)
    INT             reduce using rule 9 (variableDec -> empty .)
    TEXTO           reduce using rule 9 (variableDec -> empty .)
    ID              reduce using rule 9 (variableDec -> empty .)
    RC              reduce using rule 9 (variableDec -> empty .)
    ENDDO           reduce using rule 9 (variableDec -> empty .)
    FEND            reduce using rule 9 (variableDec -> empty .)
    FOREND          reduce using rule 9 (variableDec -> empty .)

  ! BALLOON         [ reduce using rule 33 (statement -> empty .) ]
  ! DOW             [ reduce using rule 33 (statement -> empty .) ]
  ! RANDOM          [ reduce using rule 33 (statement -> empty .) ]
  ! IF              [ reduce using rule 33 (statement -> empty .) ]
  ! INC             [ reduce using rule 33 (statement -> empty .) ]
  ! DEC             [ reduce using rule 33 (statement -> empty .) ]
  ! FOR             [ reduce using rule 33 (statement -> empty .) ]
  ! FORASIGNWORD    [ reduce using rule 33 (statement -> empty .) ]
  ! TELAARANA       [ reduce using rule 33 (statement -> empty .) ]
  ! OBJECT          [ reduce using rule 33 (statement -> empty .) ]
  ! ARRAY           [ reduce using rule 33 (statement -> empty .) ]
  ! INT             [ reduce using rule 33 (statement -> empty .) ]
  ! TEXTO           [ reduce using rule 33 (statement -> empty .) ]
  ! ID              [ reduce using rule 33 (statement -> empty .) ]
  ! RC              [ reduce using rule 33 (statement -> empty .) ]
  ! ENDDO           [ reduce using rule 33 (statement -> empty .) ]
  ! FEND            [ reduce using rule 33 (statement -> empty .) ]
  ! FOREND          [ reduce using rule 33 (statement -> empty .) ]
  ! ID              [ reduce using rule 18 (variableType -> empty .) ]


state 52

    (21) statement -> BALLOON LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 77


state 53

    (22) statement -> DOW LPAREN numberType . RPAREN statementList ENDDO SEMICOLON

    RPAREN          shift and go to state 78


state 54

    (23) statement -> RANDOM LPAREN arrayT . COLON numberType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 79


state 55

    (61) arrayT -> ARRAY . ID

    ID              shift and go to state 80


state 56

    (24) statement -> IF LPAREN condition . RPAREN SEMICOLON statement ENDIF SEMICOLON

    RPAREN          shift and go to state 81


state 57

    (37) condition -> expression . relation expression
    (47) expression -> expression . addingOperator term
    (38) relation -> . ASSIGN
    (39) relation -> . NE
    (40) relation -> . LESS
    (41) relation -> . GREATER
    (42) relation -> . EQLESS
    (43) relation -> . EQGREATER
    (44) relation -> . EQUAL
    (48) addingOperator -> . PLUS
    (49) addingOperator -> . MINUS

    ASSIGN          shift and go to state 84
    NE              shift and go to state 85
    LESS            shift and go to state 86
    GREATER         shift and go to state 87
    EQLESS          shift and go to state 88
    EQGREATER       shift and go to state 89
    EQUAL           shift and go to state 90
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62

    relation                       shift and go to state 82
    addingOperator                 shift and go to state 83

state 58

    (45) expression -> term .
    (51) term -> term . multiplyingOperator factor
    (52) multiplyingOperator -> . MULT
    (53) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 45 (expression -> term .)
    NE              reduce using rule 45 (expression -> term .)
    LESS            reduce using rule 45 (expression -> term .)
    GREATER         reduce using rule 45 (expression -> term .)
    EQLESS          reduce using rule 45 (expression -> term .)
    EQGREATER       reduce using rule 45 (expression -> term .)
    EQUAL           reduce using rule 45 (expression -> term .)
    PLUS            reduce using rule 45 (expression -> term .)
    MINUS           reduce using rule 45 (expression -> term .)
    RPAREN          reduce using rule 45 (expression -> term .)
    MULT            shift and go to state 92
    DIVIDE          shift and go to state 93

    multiplyingOperator            shift and go to state 91

state 59

    (46) expression -> addingOperator . term
    (50) term -> . factor
    (51) term -> . term multiplyingOperator factor
    (54) factor -> . ID
    (55) factor -> . NUMBER
    (56) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 63
    NUMBER          shift and go to state 64

    term                           shift and go to state 94
    factor                         shift and go to state 60

state 60

    (50) term -> factor .

    MULT            reduce using rule 50 (term -> factor .)
    DIVIDE          reduce using rule 50 (term -> factor .)
    ASSIGN          reduce using rule 50 (term -> factor .)
    NE              reduce using rule 50 (term -> factor .)
    LESS            reduce using rule 50 (term -> factor .)
    GREATER         reduce using rule 50 (term -> factor .)
    EQLESS          reduce using rule 50 (term -> factor .)
    EQGREATER       reduce using rule 50 (term -> factor .)
    EQUAL           reduce using rule 50 (term -> factor .)
    PLUS            reduce using rule 50 (term -> factor .)
    MINUS           reduce using rule 50 (term -> factor .)
    RPAREN          reduce using rule 50 (term -> factor .)


state 61

    (48) addingOperator -> PLUS .

    ID              reduce using rule 48 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 48 (addingOperator -> PLUS .)


state 62

    (49) addingOperator -> MINUS .

    ID              reduce using rule 49 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 49 (addingOperator -> MINUS .)


state 63

    (54) factor -> ID .
    (56) factor -> ID . SLPAREN NUMBER SRPAREN

    MULT            reduce using rule 54 (factor -> ID .)
    DIVIDE          reduce using rule 54 (factor -> ID .)
    ASSIGN          reduce using rule 54 (factor -> ID .)
    NE              reduce using rule 54 (factor -> ID .)
    LESS            reduce using rule 54 (factor -> ID .)
    GREATER         reduce using rule 54 (factor -> ID .)
    EQLESS          reduce using rule 54 (factor -> ID .)
    EQGREATER       reduce using rule 54 (factor -> ID .)
    EQUAL           reduce using rule 54 (factor -> ID .)
    PLUS            reduce using rule 54 (factor -> ID .)
    MINUS           reduce using rule 54 (factor -> ID .)
    RPAREN          reduce using rule 54 (factor -> ID .)
    SLPAREN         shift and go to state 95


state 64

    (55) factor -> NUMBER .

    MULT            reduce using rule 55 (factor -> NUMBER .)
    DIVIDE          reduce using rule 55 (factor -> NUMBER .)
    ASSIGN          reduce using rule 55 (factor -> NUMBER .)
    NE              reduce using rule 55 (factor -> NUMBER .)
    LESS            reduce using rule 55 (factor -> NUMBER .)
    GREATER         reduce using rule 55 (factor -> NUMBER .)
    EQLESS          reduce using rule 55 (factor -> NUMBER .)
    EQGREATER       reduce using rule 55 (factor -> NUMBER .)
    EQUAL           reduce using rule 55 (factor -> NUMBER .)
    PLUS            reduce using rule 55 (factor -> NUMBER .)
    MINUS           reduce using rule 55 (factor -> NUMBER .)
    RPAREN          reduce using rule 55 (factor -> NUMBER .)


state 65

    (25) statement -> INC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 96


state 66

    (26) statement -> DEC LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 97


state 67

    (27) statement -> FOR numberType TIMES . USING arrayT randomInFor block FOREND SEMICOLON
    (31) statement -> FOR numberType TIMES . USING ID statementList FEND SEMICOLON

    USING           shift and go to state 98


state 68

    (58) numberType -> INT ID .

    TIMES           reduce using rule 58 (numberType -> INT ID .)
    COLON           reduce using rule 58 (numberType -> INT ID .)
    RPAREN          reduce using rule 58 (numberType -> INT ID .)


state 69

    (28) statement -> FORASIGNWORD LPAREN numberType . COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    COLON           shift and go to state 99


state 70

    (29) statement -> TELAARANA LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 100


state 71

    (30) statement -> OBJECT LPAREN numberType . COLON xType COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 101


state 72

    (32) statement -> ARRAY ID LPAREN . numberType RPAREN initiateVar SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 102

state 73

    (8) variableDec -> variableType ID arrayStruct . initiateVar SEMICOLON
    (10) initiateVar -> . ASSIGN value
    (11) initiateVar -> . empty
    (62) empty -> .

    ASSIGN          shift and go to state 104
    SEMICOLON       reduce using rule 62 (empty -> .)

    initiateVar                    shift and go to state 103
    empty                          shift and go to state 105

state 74

    (12) arrayStruct -> LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 106


state 75

    (13) arrayStruct -> empty .

    ASSIGN          reduce using rule 13 (arrayStruct -> empty .)
    SEMICOLON       reduce using rule 13 (arrayStruct -> empty .)


state 76

    (17) variableType -> TEXTO LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 107


state 77

    (21) statement -> BALLOON LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 108

state 78

    (22) statement -> DOW LPAREN numberType RPAREN . statementList ENDDO SEMICOLON
    (6) statementList -> . statementList1 statementList2
    (7) statementList -> . empty
    (34) statementList1 -> . block statement
    (62) empty -> .
    (4) block -> . statementList variableDec statement
    (5) block -> . empty

    ENDDO           reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

    statementList                  shift and go to state 109
    statementList1                 shift and go to state 12
    empty                          shift and go to state 110
    block                          shift and go to state 111

state 79

    (23) statement -> RANDOM LPAREN arrayT COLON . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 112

state 80

    (61) arrayT -> ARRAY ID .

    COLON           reduce using rule 61 (arrayT -> ARRAY ID .)
    RANDOM          reduce using rule 61 (arrayT -> ARRAY ID .)
    RPAREN          reduce using rule 61 (arrayT -> ARRAY ID .)


state 81

    (24) statement -> IF LPAREN condition RPAREN . SEMICOLON statement ENDIF SEMICOLON

    SEMICOLON       shift and go to state 113


state 82

    (37) condition -> expression relation . expression
    (45) expression -> . term
    (46) expression -> . addingOperator term
    (47) expression -> . expression addingOperator term
    (50) term -> . factor
    (51) term -> . term multiplyingOperator factor
    (48) addingOperator -> . PLUS
    (49) addingOperator -> . MINUS
    (54) factor -> . ID
    (55) factor -> . NUMBER
    (56) factor -> . ID SLPAREN NUMBER SRPAREN

    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              shift and go to state 63
    NUMBER          shift and go to state 64

    expression                     shift and go to state 114
    term                           shift and go to state 58
    addingOperator                 shift and go to state 59
    factor                         shift and go to state 60

state 83

    (47) expression -> expression addingOperator . term
    (50) term -> . factor
    (51) term -> . term multiplyingOperator factor
    (54) factor -> . ID
    (55) factor -> . NUMBER
    (56) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 63
    NUMBER          shift and go to state 64

    term                           shift and go to state 115
    factor                         shift and go to state 60

state 84

    (38) relation -> ASSIGN .

    PLUS            reduce using rule 38 (relation -> ASSIGN .)
    MINUS           reduce using rule 38 (relation -> ASSIGN .)
    ID              reduce using rule 38 (relation -> ASSIGN .)
    NUMBER          reduce using rule 38 (relation -> ASSIGN .)


state 85

    (39) relation -> NE .

    PLUS            reduce using rule 39 (relation -> NE .)
    MINUS           reduce using rule 39 (relation -> NE .)
    ID              reduce using rule 39 (relation -> NE .)
    NUMBER          reduce using rule 39 (relation -> NE .)


state 86

    (40) relation -> LESS .

    PLUS            reduce using rule 40 (relation -> LESS .)
    MINUS           reduce using rule 40 (relation -> LESS .)
    ID              reduce using rule 40 (relation -> LESS .)
    NUMBER          reduce using rule 40 (relation -> LESS .)


state 87

    (41) relation -> GREATER .

    PLUS            reduce using rule 41 (relation -> GREATER .)
    MINUS           reduce using rule 41 (relation -> GREATER .)
    ID              reduce using rule 41 (relation -> GREATER .)
    NUMBER          reduce using rule 41 (relation -> GREATER .)


state 88

    (42) relation -> EQLESS .

    PLUS            reduce using rule 42 (relation -> EQLESS .)
    MINUS           reduce using rule 42 (relation -> EQLESS .)
    ID              reduce using rule 42 (relation -> EQLESS .)
    NUMBER          reduce using rule 42 (relation -> EQLESS .)


state 89

    (43) relation -> EQGREATER .

    PLUS            reduce using rule 43 (relation -> EQGREATER .)
    MINUS           reduce using rule 43 (relation -> EQGREATER .)
    ID              reduce using rule 43 (relation -> EQGREATER .)
    NUMBER          reduce using rule 43 (relation -> EQGREATER .)


state 90

    (44) relation -> EQUAL .

    PLUS            reduce using rule 44 (relation -> EQUAL .)
    MINUS           reduce using rule 44 (relation -> EQUAL .)
    ID              reduce using rule 44 (relation -> EQUAL .)
    NUMBER          reduce using rule 44 (relation -> EQUAL .)


state 91

    (51) term -> term multiplyingOperator . factor
    (54) factor -> . ID
    (55) factor -> . NUMBER
    (56) factor -> . ID SLPAREN NUMBER SRPAREN

    ID              shift and go to state 63
    NUMBER          shift and go to state 64

    factor                         shift and go to state 116

state 92

    (52) multiplyingOperator -> MULT .

    ID              reduce using rule 52 (multiplyingOperator -> MULT .)
    NUMBER          reduce using rule 52 (multiplyingOperator -> MULT .)


state 93

    (53) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 53 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 53 (multiplyingOperator -> DIVIDE .)


state 94

    (46) expression -> addingOperator term .
    (51) term -> term . multiplyingOperator factor
    (52) multiplyingOperator -> . MULT
    (53) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 46 (expression -> addingOperator term .)
    NE              reduce using rule 46 (expression -> addingOperator term .)
    LESS            reduce using rule 46 (expression -> addingOperator term .)
    GREATER         reduce using rule 46 (expression -> addingOperator term .)
    EQLESS          reduce using rule 46 (expression -> addingOperator term .)
    EQGREATER       reduce using rule 46 (expression -> addingOperator term .)
    EQUAL           reduce using rule 46 (expression -> addingOperator term .)
    PLUS            reduce using rule 46 (expression -> addingOperator term .)
    MINUS           reduce using rule 46 (expression -> addingOperator term .)
    RPAREN          reduce using rule 46 (expression -> addingOperator term .)
    MULT            shift and go to state 92
    DIVIDE          shift and go to state 93

    multiplyingOperator            shift and go to state 91

state 95

    (56) factor -> ID SLPAREN . NUMBER SRPAREN

    NUMBER          shift and go to state 117


state 96

    (25) statement -> INC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 118

state 97

    (26) statement -> DEC LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 119

state 98

    (27) statement -> FOR numberType TIMES USING . arrayT randomInFor block FOREND SEMICOLON
    (31) statement -> FOR numberType TIMES USING . ID statementList FEND SEMICOLON
    (61) arrayT -> . ARRAY ID

    ID              shift and go to state 121
    ARRAY           shift and go to state 55

    arrayT                         shift and go to state 120

state 99

    (28) statement -> FORASIGNWORD LPAREN numberType COLON . numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 122

state 100

    (29) statement -> TELAARANA LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 123

state 101

    (30) statement -> OBJECT LPAREN numberType COLON . xType COLON numberType RPAREN SEMICOLON
    (14) xType -> . numberType
    (15) xType -> . arrayType2
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID
    (60) arrayType2 -> . ARRAY ID LPAREN ID RPAREN

    NUMBER          shift and go to state 41
    INT             shift and go to state 42
    ARRAY           shift and go to state 127

    numberType                     shift and go to state 124
    xType                          shift and go to state 125
    arrayType2                     shift and go to state 126

state 102

    (32) statement -> ARRAY ID LPAREN numberType . RPAREN initiateVar SEMICOLON

    RPAREN          shift and go to state 128


state 103

    (8) variableDec -> variableType ID arrayStruct initiateVar . SEMICOLON

    SEMICOLON       shift and go to state 129


state 104

    (10) initiateVar -> ASSIGN . value
    (19) value -> . NUMBER
    (20) value -> . STRING

    NUMBER          shift and go to state 131
    STRING          shift and go to state 132

    value                          shift and go to state 130

state 105

    (11) initiateVar -> empty .

    SEMICOLON       reduce using rule 11 (initiateVar -> empty .)


state 106

    (12) arrayStruct -> LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 133


state 107

    (17) variableType -> TEXTO LPAREN NUMBER RPAREN .

    ID              reduce using rule 17 (variableType -> TEXTO LPAREN NUMBER RPAREN .)


state 108

    (21) statement -> BALLOON LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 134


state 109

    (22) statement -> DOW LPAREN numberType RPAREN statementList . ENDDO SEMICOLON
    (4) block -> statementList . variableDec statement
    (8) variableDec -> . variableType ID arrayStruct initiateVar SEMICOLON
    (9) variableDec -> . empty
    (16) variableType -> . INT
    (17) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (18) variableType -> . empty
    (62) empty -> .

  ! shift/reduce conflict for ENDDO resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    ENDDO           shift and go to state 135
    INT             shift and go to state 30
    TEXTO           shift and go to state 31
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

  ! ENDDO           [ reduce using rule 62 (empty -> .) ]
  ! INT             [ reduce using rule 62 (empty -> .) ]
  ! TEXTO           [ reduce using rule 62 (empty -> .) ]

    variableDec                    shift and go to state 27
    variableType                   shift and go to state 28
    empty                          shift and go to state 29

state 110

    (7) statementList -> empty .
    (5) block -> empty .

  ! reduce/reduce conflict for ENDDO resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for TEXTO resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for BALLOON resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for DOW resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for RANDOM resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for INC resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for DEC resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FORASIGNWORD resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for TELAARANA resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for OBJECT resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for ARRAY resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 5 (block -> empty .)
  ! reduce/reduce conflict for FEND resolved using rule 5 (block -> empty .)
    ENDDO           reduce using rule 5 (block -> empty .)
    INT             reduce using rule 5 (block -> empty .)
    TEXTO           reduce using rule 5 (block -> empty .)
    BALLOON         reduce using rule 5 (block -> empty .)
    DOW             reduce using rule 5 (block -> empty .)
    RANDOM          reduce using rule 5 (block -> empty .)
    IF              reduce using rule 5 (block -> empty .)
    INC             reduce using rule 5 (block -> empty .)
    DEC             reduce using rule 5 (block -> empty .)
    FOR             reduce using rule 5 (block -> empty .)
    FORASIGNWORD    reduce using rule 5 (block -> empty .)
    TELAARANA       reduce using rule 5 (block -> empty .)
    OBJECT          reduce using rule 5 (block -> empty .)
    ARRAY           reduce using rule 5 (block -> empty .)
    ID              reduce using rule 5 (block -> empty .)
    FEND            reduce using rule 5 (block -> empty .)

  ! ENDDO           [ reduce using rule 7 (statementList -> empty .) ]
  ! INT             [ reduce using rule 7 (statementList -> empty .) ]
  ! TEXTO           [ reduce using rule 7 (statementList -> empty .) ]
  ! BALLOON         [ reduce using rule 7 (statementList -> empty .) ]
  ! DOW             [ reduce using rule 7 (statementList -> empty .) ]
  ! RANDOM          [ reduce using rule 7 (statementList -> empty .) ]
  ! IF              [ reduce using rule 7 (statementList -> empty .) ]
  ! INC             [ reduce using rule 7 (statementList -> empty .) ]
  ! DEC             [ reduce using rule 7 (statementList -> empty .) ]
  ! FOR             [ reduce using rule 7 (statementList -> empty .) ]
  ! FORASIGNWORD    [ reduce using rule 7 (statementList -> empty .) ]
  ! TELAARANA       [ reduce using rule 7 (statementList -> empty .) ]
  ! OBJECT          [ reduce using rule 7 (statementList -> empty .) ]
  ! ARRAY           [ reduce using rule 7 (statementList -> empty .) ]
  ! ID              [ reduce using rule 7 (statementList -> empty .) ]
  ! FEND            [ reduce using rule 7 (statementList -> empty .) ]


state 111

    (34) statementList1 -> block . statement
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (62) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    ENDDO           reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    FEND            reduce using rule 62 (empty -> .)

  ! BALLOON         [ reduce using rule 62 (empty -> .) ]
  ! DOW             [ reduce using rule 62 (empty -> .) ]
  ! RANDOM          [ reduce using rule 62 (empty -> .) ]
  ! IF              [ reduce using rule 62 (empty -> .) ]
  ! INC             [ reduce using rule 62 (empty -> .) ]
  ! DEC             [ reduce using rule 62 (empty -> .) ]
  ! FOR             [ reduce using rule 62 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 62 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 62 (empty -> .) ]
  ! OBJECT          [ reduce using rule 62 (empty -> .) ]
  ! ARRAY           [ reduce using rule 62 (empty -> .) ]

    statement                      shift and go to state 14
    empty                          shift and go to state 26

state 112

    (23) statement -> RANDOM LPAREN arrayT COLON numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 136


state 113

    (24) statement -> IF LPAREN condition RPAREN SEMICOLON . statement ENDIF SEMICOLON
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (62) empty -> .

    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    ENDIF           reduce using rule 62 (empty -> .)

    statement                      shift and go to state 137
    empty                          shift and go to state 26

state 114

    (37) condition -> expression relation expression .
    (47) expression -> expression . addingOperator term
    (48) addingOperator -> . PLUS
    (49) addingOperator -> . MINUS

    RPAREN          reduce using rule 37 (condition -> expression relation expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62

    addingOperator                 shift and go to state 83

state 115

    (47) expression -> expression addingOperator term .
    (51) term -> term . multiplyingOperator factor
    (52) multiplyingOperator -> . MULT
    (53) multiplyingOperator -> . DIVIDE

    ASSIGN          reduce using rule 47 (expression -> expression addingOperator term .)
    NE              reduce using rule 47 (expression -> expression addingOperator term .)
    LESS            reduce using rule 47 (expression -> expression addingOperator term .)
    GREATER         reduce using rule 47 (expression -> expression addingOperator term .)
    EQLESS          reduce using rule 47 (expression -> expression addingOperator term .)
    EQGREATER       reduce using rule 47 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 47 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 47 (expression -> expression addingOperator term .)
    MINUS           reduce using rule 47 (expression -> expression addingOperator term .)
    RPAREN          reduce using rule 47 (expression -> expression addingOperator term .)
    MULT            shift and go to state 92
    DIVIDE          shift and go to state 93

    multiplyingOperator            shift and go to state 91

state 116

    (51) term -> term multiplyingOperator factor .

    MULT            reduce using rule 51 (term -> term multiplyingOperator factor .)
    DIVIDE          reduce using rule 51 (term -> term multiplyingOperator factor .)
    ASSIGN          reduce using rule 51 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 51 (term -> term multiplyingOperator factor .)
    LESS            reduce using rule 51 (term -> term multiplyingOperator factor .)
    GREATER         reduce using rule 51 (term -> term multiplyingOperator factor .)
    EQLESS          reduce using rule 51 (term -> term multiplyingOperator factor .)
    EQGREATER       reduce using rule 51 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 51 (term -> term multiplyingOperator factor .)
    PLUS            reduce using rule 51 (term -> term multiplyingOperator factor .)
    MINUS           reduce using rule 51 (term -> term multiplyingOperator factor .)
    RPAREN          reduce using rule 51 (term -> term multiplyingOperator factor .)


state 117

    (56) factor -> ID SLPAREN NUMBER . SRPAREN

    SRPAREN         shift and go to state 138


state 118

    (25) statement -> INC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 139


state 119

    (26) statement -> DEC LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 140


state 120

    (27) statement -> FOR numberType TIMES USING arrayT . randomInFor block FOREND SEMICOLON
    (36) randomInFor -> . RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON

    RANDOM          shift and go to state 142

    randomInFor                    shift and go to state 141

state 121

    (31) statement -> FOR numberType TIMES USING ID . statementList FEND SEMICOLON
    (6) statementList -> . statementList1 statementList2
    (7) statementList -> . empty
    (34) statementList1 -> . block statement
    (62) empty -> .
    (4) block -> . statementList variableDec statement
    (5) block -> . empty

    FEND            reduce using rule 62 (empty -> .)
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

    statementList                  shift and go to state 143
    statementList1                 shift and go to state 12
    empty                          shift and go to state 110
    block                          shift and go to state 111

state 122

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType . RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 123

    (29) statement -> TELAARANA LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 145


state 124

    (14) xType -> numberType .

    COLON           reduce using rule 14 (xType -> numberType .)


state 125

    (30) statement -> OBJECT LPAREN numberType COLON xType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 146


state 126

    (15) xType -> arrayType2 .

    COLON           reduce using rule 15 (xType -> arrayType2 .)


state 127

    (60) arrayType2 -> ARRAY . ID LPAREN ID RPAREN

    ID              shift and go to state 147


state 128

    (32) statement -> ARRAY ID LPAREN numberType RPAREN . initiateVar SEMICOLON
    (10) initiateVar -> . ASSIGN value
    (11) initiateVar -> . empty
    (62) empty -> .

    ASSIGN          shift and go to state 104
    SEMICOLON       reduce using rule 62 (empty -> .)

    initiateVar                    shift and go to state 148
    empty                          shift and go to state 105

state 129

    (8) variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .

    BALLOON         reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    DOW             reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    RANDOM          reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    IF              reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    INC             reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    DEC             reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FOR             reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FORASIGNWORD    reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    TELAARANA       reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    OBJECT          reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    ARRAY           reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    RC              reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    INT             reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    TEXTO           reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    ID              reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    ENDDO           reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FEND            reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)
    FOREND          reduce using rule 8 (variableDec -> variableType ID arrayStruct initiateVar SEMICOLON .)


state 130

    (10) initiateVar -> ASSIGN value .

    SEMICOLON       reduce using rule 10 (initiateVar -> ASSIGN value .)


state 131

    (19) value -> NUMBER .

    SEMICOLON       reduce using rule 19 (value -> NUMBER .)


state 132

    (20) value -> STRING .

    SEMICOLON       reduce using rule 20 (value -> STRING .)


state 133

    (12) arrayStruct -> LPAREN NUMBER RPAREN .

    ASSIGN          reduce using rule 12 (arrayStruct -> LPAREN NUMBER RPAREN .)
    SEMICOLON       reduce using rule 12 (arrayStruct -> LPAREN NUMBER RPAREN .)


state 134

    (21) statement -> BALLOON LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 135

    (22) statement -> DOW LPAREN numberType RPAREN statementList ENDDO . SEMICOLON

    SEMICOLON       shift and go to state 150


state 136

    (23) statement -> RANDOM LPAREN arrayT COLON numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 151

state 137

    (24) statement -> IF LPAREN condition RPAREN SEMICOLON statement . ENDIF SEMICOLON

    ENDIF           shift and go to state 152


state 138

    (56) factor -> ID SLPAREN NUMBER SRPAREN .

    MULT            reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    DIVIDE          reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    ASSIGN          reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    NE              reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    LESS            reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    GREATER         reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQLESS          reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQGREATER       reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    EQUAL           reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    PLUS            reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    MINUS           reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)
    RPAREN          reduce using rule 56 (factor -> ID SLPAREN NUMBER SRPAREN .)


state 139

    (25) statement -> INC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 153


state 140

    (26) statement -> DEC LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 154


state 141

    (27) statement -> FOR numberType TIMES USING arrayT randomInFor . block FOREND SEMICOLON
    (4) block -> . statementList variableDec statement
    (5) block -> . empty
    (6) statementList -> . statementList1 statementList2
    (7) statementList -> . empty
    (62) empty -> .
    (34) statementList1 -> . block statement

    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)
    FOREND          reduce using rule 62 (empty -> .)

    block                          shift and go to state 155
    statementList                  shift and go to state 10
    empty                          shift and go to state 11
    statementList1                 shift and go to state 12

state 142

    (36) randomInFor -> RANDOM . LPAREN numberType COLON numberType RPAREN SEMICOLON

    LPAREN          shift and go to state 156


state 143

    (31) statement -> FOR numberType TIMES USING ID statementList . FEND SEMICOLON
    (4) block -> statementList . variableDec statement
    (8) variableDec -> . variableType ID arrayStruct initiateVar SEMICOLON
    (9) variableDec -> . empty
    (16) variableType -> . INT
    (17) variableType -> . TEXTO LPAREN NUMBER RPAREN
    (18) variableType -> . empty
    (62) empty -> .

  ! shift/reduce conflict for FEND resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for TEXTO resolved as shift
    FEND            shift and go to state 157
    INT             shift and go to state 30
    TEXTO           shift and go to state 31
    BALLOON         reduce using rule 62 (empty -> .)
    DOW             reduce using rule 62 (empty -> .)
    RANDOM          reduce using rule 62 (empty -> .)
    IF              reduce using rule 62 (empty -> .)
    INC             reduce using rule 62 (empty -> .)
    DEC             reduce using rule 62 (empty -> .)
    FOR             reduce using rule 62 (empty -> .)
    FORASIGNWORD    reduce using rule 62 (empty -> .)
    TELAARANA       reduce using rule 62 (empty -> .)
    OBJECT          reduce using rule 62 (empty -> .)
    ARRAY           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

  ! FEND            [ reduce using rule 62 (empty -> .) ]
  ! INT             [ reduce using rule 62 (empty -> .) ]
  ! TEXTO           [ reduce using rule 62 (empty -> .) ]

    variableDec                    shift and go to state 27
    variableType                   shift and go to state 28
    empty                          shift and go to state 29

state 144

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN . DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    DO              shift and go to state 158


state 145

    (29) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 146

    (30) statement -> OBJECT LPAREN numberType COLON xType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 160

state 147

    (60) arrayType2 -> ARRAY ID . LPAREN ID RPAREN

    LPAREN          shift and go to state 161


state 148

    (32) statement -> ARRAY ID LPAREN numberType RPAREN initiateVar . SEMICOLON

    SEMICOLON       shift and go to state 162


state 149

    (21) statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 21 (statement -> BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 150

    (22) statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .

    RC              reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    BALLOON         reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    DOW             reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    RANDOM          reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    IF              reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    INC             reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    DEC             reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FOR             reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FORASIGNWORD    reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    TELAARANA       reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    OBJECT          reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    ARRAY           reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    INT             reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    TEXTO           reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    ID              reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    ENDDO           reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FEND            reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    FOREND          reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)
    ENDIF           reduce using rule 22 (statement -> DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON .)


state 151

    (23) statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 152

    (24) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF . SEMICOLON

    SEMICOLON       shift and go to state 164


state 153

    (25) statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 25 (statement -> INC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 154

    (26) statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 26 (statement -> DEC LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 155

    (27) statement -> FOR numberType TIMES USING arrayT randomInFor block . FOREND SEMICOLON
    (34) statementList1 -> block . statement
    (21) statement -> . BALLOON LPAREN numberType COLON numberType RPAREN SEMICOLON
    (22) statement -> . DOW LPAREN numberType RPAREN statementList ENDDO SEMICOLON
    (23) statement -> . RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON
    (25) statement -> . INC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (26) statement -> . DEC LPAREN numberType COLON numberType RPAREN SEMICOLON
    (27) statement -> . FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON
    (28) statement -> . FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON
    (29) statement -> . TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON
    (30) statement -> . OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON
    (31) statement -> . FOR numberType TIMES USING ID statementList FEND SEMICOLON
    (32) statement -> . ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON
    (33) statement -> . empty
    (62) empty -> .

  ! shift/reduce conflict for BALLOON resolved as shift
  ! shift/reduce conflict for DOW resolved as shift
  ! shift/reduce conflict for RANDOM resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INC resolved as shift
  ! shift/reduce conflict for DEC resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FORASIGNWORD resolved as shift
  ! shift/reduce conflict for TELAARANA resolved as shift
  ! shift/reduce conflict for OBJECT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for FOREND resolved as shift
    FOREND          shift and go to state 165
    BALLOON         shift and go to state 15
    DOW             shift and go to state 16
    RANDOM          shift and go to state 17
    IF              shift and go to state 18
    INC             shift and go to state 19
    DEC             shift and go to state 20
    FOR             shift and go to state 21
    FORASIGNWORD    shift and go to state 22
    TELAARANA       shift and go to state 23
    OBJECT          shift and go to state 24
    ARRAY           shift and go to state 25
    INT             reduce using rule 62 (empty -> .)
    TEXTO           reduce using rule 62 (empty -> .)
    ID              reduce using rule 62 (empty -> .)

  ! BALLOON         [ reduce using rule 62 (empty -> .) ]
  ! DOW             [ reduce using rule 62 (empty -> .) ]
  ! RANDOM          [ reduce using rule 62 (empty -> .) ]
  ! IF              [ reduce using rule 62 (empty -> .) ]
  ! INC             [ reduce using rule 62 (empty -> .) ]
  ! DEC             [ reduce using rule 62 (empty -> .) ]
  ! FOR             [ reduce using rule 62 (empty -> .) ]
  ! FORASIGNWORD    [ reduce using rule 62 (empty -> .) ]
  ! TELAARANA       [ reduce using rule 62 (empty -> .) ]
  ! OBJECT          [ reduce using rule 62 (empty -> .) ]
  ! ARRAY           [ reduce using rule 62 (empty -> .) ]
  ! FOREND          [ reduce using rule 62 (empty -> .) ]

    statement                      shift and go to state 14
    empty                          shift and go to state 26

state 156

    (36) randomInFor -> RANDOM LPAREN . numberType COLON numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 166

state 157

    (31) statement -> FOR numberType TIMES USING ID statementList FEND . SEMICOLON

    SEMICOLON       shift and go to state 167


state 158

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO . ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    ASIGNWORD       shift and go to state 168


state 159

    (29) statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 29 (statement -> TELAARANA LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 160

    (30) statement -> OBJECT LPAREN numberType COLON xType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 161

    (60) arrayType2 -> ARRAY ID LPAREN . ID RPAREN

    ID              shift and go to state 170


state 162

    (32) statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .

    RC              reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    BALLOON         reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    DOW             reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    RANDOM          reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    IF              reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    INC             reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    DEC             reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    FOR             reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    FORASIGNWORD    reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    TELAARANA       reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    OBJECT          reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    ARRAY           reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    INT             reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    TEXTO           reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    ID              reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    ENDDO           reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    FEND            reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    FOREND          reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)
    ENDIF           reduce using rule 32 (statement -> ARRAY ID LPAREN numberType RPAREN initiateVar SEMICOLON .)


state 163

    (23) statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 171


state 164

    (24) statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .

    RC              reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    BALLOON         reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    DOW             reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    RANDOM          reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    IF              reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    INC             reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    DEC             reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FOR             reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FORASIGNWORD    reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    TELAARANA       reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    OBJECT          reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ARRAY           reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    INT             reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    TEXTO           reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ID              reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDDO           reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FEND            reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    FOREND          reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)
    ENDIF           reduce using rule 24 (statement -> IF LPAREN condition RPAREN SEMICOLON statement ENDIF SEMICOLON .)


state 165

    (27) statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND . SEMICOLON

    SEMICOLON       shift and go to state 172


state 166

    (36) randomInFor -> RANDOM LPAREN numberType . COLON numberType RPAREN SEMICOLON

    COLON           shift and go to state 173


state 167

    (31) statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .

    RC              reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    BALLOON         reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    DOW             reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    RANDOM          reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    IF              reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    INC             reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    DEC             reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    FOR             reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    FORASIGNWORD    reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    TELAARANA       reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    OBJECT          reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    ARRAY           reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    INT             reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    TEXTO           reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    ID              reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    ENDDO           reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    FEND            reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    FOREND          reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)
    ENDIF           reduce using rule 31 (statement -> FOR numberType TIMES USING ID statementList FEND SEMICOLON .)


state 168

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD . LPAREN arrayT COLON arrayT RPAREN SEMICOLON

    LPAREN          shift and go to state 174


state 169

    (30) statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 170

    (60) arrayType2 -> ARRAY ID LPAREN ID . RPAREN

    RPAREN          shift and go to state 176


state 171

    (23) statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 23 (statement -> RANDOM LPAREN arrayT COLON numberType COLON numberType RPAREN SEMICOLON .)


state 172

    (27) statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .

    RC              reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    BALLOON         reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    DOW             reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    RANDOM          reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    IF              reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    INC             reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    DEC             reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    FOR             reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    FORASIGNWORD    reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    TELAARANA       reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    OBJECT          reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    ARRAY           reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    INT             reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    TEXTO           reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    ID              reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    ENDDO           reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    FEND            reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    FOREND          reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)
    ENDIF           reduce using rule 27 (statement -> FOR numberType TIMES USING arrayT randomInFor block FOREND SEMICOLON .)


state 173

    (36) randomInFor -> RANDOM LPAREN numberType COLON . numberType RPAREN SEMICOLON
    (57) numberType -> . NUMBER
    (58) numberType -> . INT ID

    NUMBER          shift and go to state 41
    INT             shift and go to state 42

    numberType                     shift and go to state 177

state 174

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN . arrayT COLON arrayT RPAREN SEMICOLON
    (61) arrayT -> . ARRAY ID

    ARRAY           shift and go to state 55

    arrayT                         shift and go to state 178

state 175

    (30) statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .

    RC              reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    ENDDO           reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    FEND            reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    FOREND          reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)
    ENDIF           reduce using rule 30 (statement -> OBJECT LPAREN numberType COLON xType COLON numberType RPAREN SEMICOLON .)


state 176

    (60) arrayType2 -> ARRAY ID LPAREN ID RPAREN .

    COLON           reduce using rule 60 (arrayType2 -> ARRAY ID LPAREN ID RPAREN .)


state 177

    (36) randomInFor -> RANDOM LPAREN numberType COLON numberType . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 178

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT . COLON arrayT RPAREN SEMICOLON

    COLON           shift and go to state 180


state 179

    (36) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 181


state 180

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON . arrayT RPAREN SEMICOLON
    (61) arrayT -> . ARRAY ID

    ARRAY           shift and go to state 55

    arrayT                         shift and go to state 182

state 181

    (36) randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .

    FOREND          reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    BALLOON         reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DOW             reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    RANDOM          reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    IF              reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INC             reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    DEC             reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    OBJECT          reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ARRAY           reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    INT             reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    TEXTO           reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)
    ID              reduce using rule 36 (randomInFor -> RANDOM LPAREN numberType COLON numberType RPAREN SEMICOLON .)


state 182

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 183

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 184


state 184

    (28) statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .

    RC              reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    BALLOON         reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    DOW             reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    RANDOM          reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    IF              reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    INC             reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    DEC             reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    FORASIGNWORD    reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    TELAARANA       reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    OBJECT          reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    ARRAY           reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    INT             reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    TEXTO           reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    ID              reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    ENDDO           reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    FEND            reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    FOREND          reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)
    ENDIF           reduce using rule 28 (statement -> FORASIGNWORD LPAREN numberType COLON numberType RPAREN DO ASIGNWORD LPAREN arrayT COLON arrayT RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RC in state 9 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 9 resolved as shift
WARNING: shift/reduce conflict for DOW in state 9 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for INC in state 9 resolved as shift
WARNING: shift/reduce conflict for DEC in state 9 resolved as shift
WARNING: shift/reduce conflict for FOR in state 9 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 9 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 9 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 9 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 10 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 27 resolved as shift
WARNING: shift/reduce conflict for DOW in state 27 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for INC in state 27 resolved as shift
WARNING: shift/reduce conflict for DEC in state 27 resolved as shift
WARNING: shift/reduce conflict for FOR in state 27 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 27 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 27 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 27 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 27 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 33 resolved as shift
WARNING: shift/reduce conflict for DOW in state 33 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for INC in state 33 resolved as shift
WARNING: shift/reduce conflict for DEC in state 33 resolved as shift
WARNING: shift/reduce conflict for FOR in state 33 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 33 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 33 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 33 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 33 resolved as shift
WARNING: shift/reduce conflict for INT in state 33 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 33 resolved as shift
WARNING: shift/reduce conflict for ENDDO in state 109 resolved as shift
WARNING: shift/reduce conflict for INT in state 109 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 109 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 111 resolved as shift
WARNING: shift/reduce conflict for DOW in state 111 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 111 resolved as shift
WARNING: shift/reduce conflict for IF in state 111 resolved as shift
WARNING: shift/reduce conflict for INC in state 111 resolved as shift
WARNING: shift/reduce conflict for DEC in state 111 resolved as shift
WARNING: shift/reduce conflict for FOR in state 111 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 111 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 111 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 111 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 111 resolved as shift
WARNING: shift/reduce conflict for FEND in state 143 resolved as shift
WARNING: shift/reduce conflict for INT in state 143 resolved as shift
WARNING: shift/reduce conflict for TEXTO in state 143 resolved as shift
WARNING: shift/reduce conflict for BALLOON in state 155 resolved as shift
WARNING: shift/reduce conflict for DOW in state 155 resolved as shift
WARNING: shift/reduce conflict for RANDOM in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for INC in state 155 resolved as shift
WARNING: shift/reduce conflict for DEC in state 155 resolved as shift
WARNING: shift/reduce conflict for FOR in state 155 resolved as shift
WARNING: shift/reduce conflict for FORASIGNWORD in state 155 resolved as shift
WARNING: shift/reduce conflict for TELAARANA in state 155 resolved as shift
WARNING: shift/reduce conflict for OBJECT in state 155 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 155 resolved as shift
WARNING: shift/reduce conflict for FOREND in state 155 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (block -> empty)
WARNING: rejected rule (statementList -> empty) in state 11
WARNING: reduce/reduce conflict in state 29 resolved using rule (variableDec -> empty)
WARNING: rejected rule (variableType -> empty) in state 29
WARNING: reduce/reduce conflict in state 51 resolved using rule (variableDec -> empty)
WARNING: rejected rule (statement -> empty) in state 51
WARNING: reduce/reduce conflict in state 51 resolved using rule (variableDec -> empty)
WARNING: rejected rule (variableType -> empty) in state 51
WARNING: reduce/reduce conflict in state 110 resolved using rule (block -> empty)
WARNING: rejected rule (statementList -> empty) in state 110
WARNING: Rule (statementList -> empty) is never reduced
WARNING: Rule (variableType -> empty) is never reduced
